{"version":3,"sources":["webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/account_gallery/components/media_item.jsx","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/account_gallery/index.jsx"],"names":["MediaItem","ImmutablePureComponent","constructor","arguments","state","visible","displayMedia","this","props","attachment","getIn","loaded","handleImageLoad","setState","handleMouseEnter","e","hoverToPlay","target","play","handleMouseLeave","pause","currentTime","handleClick","button","ctrlKey","metaKey","preventDefault","onOpenMedia","autoPlayGif","indexOf","get","render","displayWidth","useBlurhash","width","Math","floor","height","status","title","thumbnail","label","icon","content","includes","_jsx","src","alt","lang","onLoad","Icon","id","x","y","style","objectPosition","className","role","onMouseEnter","onMouseLeave","autoPlay","playsInline","loop","muted","href","onClick","rel","Blurhash","hash","classNames","dummy","propTypes","ImmutablePropTypes","map","isRequired","PropTypes","number","func","bool","LoadMoreMedia","handleLoadMore","onLoadMore","maxId","LoadMore","disabled","string","AccountGallery","handleHeaderClick","column","scrollTop","handleScrollToBottom","hasMore","attachments","size","last","undefined","handleScroll","scrollHeight","clientHeight","isLoading","dispatch","expandAccountMediaTimeline","accountId","handleLoadOlder","setColumnRef","c","handleOpenMedia","statusId","openModal","modalType","modalProps","media","options","index","findIndex","handleRef","offsetWidth","_load","isAccount","fetchAccount","componentDidMount","params","acct","lookupAccount","componentDidUpdate","prevProps","settings","multiColumn","suspended","BundleColumnError","errorType","Column","LoadingIndicator","loadOlder","_jsxs","ref","children","ProfileColumnHeader","ScrollContainer","scrollKey","onScroll","HeaderContainer","FormattedMessage","defaultMessage","shape","list","connect","mapStateToProps","_ref","normalizeForLookup","getAccountGallery"],"mappings":"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","file":"js/flavours/glitch/async/account_gallery.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { Blurhash } from 'flavours/glitch/components/blurhash';\nimport { Icon } from 'flavours/glitch/components/icon';\nimport { autoPlayGif, displayMedia } from 'flavours/glitch/initial_state';\n\nexport default class MediaItem extends ImmutablePureComponent {\n\n  static propTypes = {\n    attachment: ImmutablePropTypes.map.isRequired,\n    displayWidth: PropTypes.number.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n    useBlurhash: PropTypes.bool,\n  };\n\n  state = {\n    visible: displayMedia !== 'hide_all' && !this.props.attachment.getIn(['status', 'sensitive']) || displayMedia === 'show_all',\n    loaded: false,\n  };\n\n  handleImageLoad = () => {\n    this.setState({ loaded: true });\n  };\n\n  handleMouseEnter = e => {\n    if (this.hoverToPlay()) {\n      e.target.play();\n    }\n  };\n\n  handleMouseLeave = e => {\n    if (this.hoverToPlay()) {\n      e.target.pause();\n      e.target.currentTime = 0;\n    }\n  };\n\n  hoverToPlay () {\n    return !autoPlayGif && ['gifv', 'video'].indexOf(this.props.attachment.get('type')) !== -1;\n  }\n\n  handleClick = e => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n\n      if (this.state.visible) {\n        this.props.onOpenMedia(this.props.attachment);\n      } else {\n        this.setState({ visible: true });\n      }\n    }\n  };\n\n  render () {\n    const { attachment, displayWidth, useBlurhash } = this.props;\n    const { visible, loaded } = this.state;\n\n    const width  = `${Math.floor((displayWidth - 4) / 3) - 4}px`;\n    const height = width;\n    const status = attachment.get('status');\n    const title  = status.get('spoiler_text') || attachment.get('description');\n\n    let thumbnail, label, icon, content;\n\n    if (!visible) {\n      icon = (\n        <span className='account-gallery__item__icons'>\n          <Icon id='eye-slash' />\n        </span>\n      );\n    } else {\n      if (['audio', 'video'].includes(attachment.get('type'))) {\n        content = (\n          <img\n            src={attachment.get('preview_url') || attachment.getIn(['account', 'avatar_static'])}\n            alt={attachment.get('description')}\n            lang={status.get('language')}\n            onLoad={this.handleImageLoad}\n          />\n        );\n\n        if (attachment.get('type') === 'audio') {\n          label = <Icon id='music' />;\n        } else {\n          label = <Icon id='play' />;\n        }\n      } else if (attachment.get('type') === 'image') {\n        const focusX = attachment.getIn(['meta', 'focus', 'x']) || 0;\n        const focusY = attachment.getIn(['meta', 'focus', 'y']) || 0;\n        const x      = ((focusX /  2) + .5) * 100;\n        const y      = ((focusY / -2) + .5) * 100;\n\n        content = (\n          <img\n            src={attachment.get('preview_url')}\n            alt={attachment.get('description')}\n            lang={status.get('language')}\n            style={{ objectPosition: `${x}% ${y}%` }}\n            onLoad={this.handleImageLoad}\n          />\n        );\n      } else if (attachment.get('type') === 'gifv') {\n        content = (\n          <video\n            className='media-gallery__item-gifv-thumbnail'\n            aria-label={attachment.get('description')}\n            title={attachment.get('description')}\n            lang={status.get('language')}\n            role='application'\n            src={attachment.get('url')}\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n            autoPlay={autoPlayGif}\n            playsInline\n            loop\n            muted\n          />\n        );\n\n        label = 'GIF';\n      }\n\n      thumbnail = (\n        <div className='media-gallery__gifv'>\n          {content}\n\n          {label && (\n            <div className='media-gallery__item__badges'>\n              <span className='media-gallery__gifv__label'>{label}</span>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className='account-gallery__item' style={{ width, height }}>\n        <a className='media-gallery__item-thumbnail' href={status.get('url')} onClick={this.handleClick} title={title} target='_blank' rel='noopener noreferrer'>\n          <Blurhash\n            hash={attachment.get('blurhash')}\n            className={classNames('media-gallery__preview', { 'media-gallery__preview--hidden': visible && loaded })}\n            dummy={!useBlurhash}\n          />\n\n          {visible ? thumbnail : icon}\n        </a>\n      </div>\n    );\n  }\n\n}\n","import PropTypes from 'prop-types';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { lookupAccount, fetchAccount } from 'flavours/glitch/actions/accounts';\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport { expandAccountMediaTimeline } from 'flavours/glitch/actions/timelines';\nimport { LoadMore } from 'flavours/glitch/components/load_more';\nimport { LoadingIndicator } from 'flavours/glitch/components/loading_indicator';\nimport ScrollContainer from 'flavours/glitch/containers/scroll_container';\nimport ProfileColumnHeader from 'flavours/glitch/features/account/components/profile_column_header';\nimport HeaderContainer from 'flavours/glitch/features/account_timeline/containers/header_container';\nimport BundleColumnError from 'flavours/glitch/features/ui/components/bundle_column_error';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport { normalizeForLookup } from 'flavours/glitch/reducers/accounts_map';\nimport { getAccountGallery } from 'flavours/glitch/selectors';\n\nimport MediaItem from './components/media_item';\n\nconst mapStateToProps = (state, { params: { acct, id } }) => {\n  const accountId = id || state.getIn(['accounts_map', normalizeForLookup(acct)]);\n\n  if (!accountId) {\n    return {\n      isLoading: true,\n    };\n  }\n\n  return {\n    accountId,\n    settings: state.get('local_settings'),\n    isAccount: !!state.getIn(['accounts', accountId]),\n    attachments: getAccountGallery(state, accountId),\n    isLoading: state.getIn(['timelines', `account:${accountId}:media`, 'isLoading']),\n    hasMore: state.getIn(['timelines', `account:${accountId}:media`, 'hasMore']),\n    suspended: state.getIn(['accounts', accountId, 'suspended'], false),\n  };\n};\n\nclass LoadMoreMedia extends ImmutablePureComponent {\n\n  static propTypes = {\n    maxId: PropTypes.string,\n    onLoadMore: PropTypes.func.isRequired,\n  };\n\n  handleLoadMore = () => {\n    this.props.onLoadMore(this.props.maxId);\n  };\n\n  render () {\n    return (\n      <LoadMore\n        disabled={this.props.disabled}\n        onClick={this.handleLoadMore}\n      />\n    );\n  }\n\n}\n\nclass AccountGallery extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.shape({\n      acct: PropTypes.string,\n      id: PropTypes.string,\n    }).isRequired,\n    settings: ImmutablePropTypes.map.isRequired,\n    accountId: PropTypes.string,\n    dispatch: PropTypes.func.isRequired,\n    attachments: ImmutablePropTypes.list.isRequired,\n    isLoading: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isAccount: PropTypes.bool,\n    suspended: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n  };\n\n  state = {\n    width: 323,\n  };\n\n  _load () {\n    const { accountId, isAccount, dispatch } = this.props;\n\n    if (!isAccount) dispatch(fetchAccount(accountId));\n    dispatch(expandAccountMediaTimeline(accountId));\n  }\n\n  componentDidMount () {\n    const { params: { acct }, accountId, dispatch } = this.props;\n\n    if (accountId) {\n      this._load();\n    } else {\n      dispatch(lookupAccount(acct));\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { params: { acct }, accountId, dispatch } = this.props;\n\n    if (prevProps.accountId !== accountId && accountId) {\n      this._load();\n    } else if (prevProps.params.acct !== acct) {\n      dispatch(lookupAccount(acct));\n    }\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  handleScrollToBottom = () => {\n    if (this.props.hasMore) {\n      this.handleLoadMore(this.props.attachments.size > 0 ? this.props.attachments.last().getIn(['status', 'id']) : undefined);\n    }\n  };\n\n  handleScroll = e => {\n    const { scrollTop, scrollHeight, clientHeight } = e.target;\n    const offset = scrollHeight - scrollTop - clientHeight;\n\n    if (150 > offset && !this.props.isLoading) {\n      this.handleScrollToBottom();\n    }\n  };\n\n  handleLoadMore = maxId => {\n    this.props.dispatch(expandAccountMediaTimeline(this.props.accountId, { maxId }));\n  };\n\n  handleLoadOlder = e => {\n    e.preventDefault();\n    this.handleScrollToBottom();\n  };\n\n  setColumnRef = c => {\n    this.column = c;\n  };\n\n  handleOpenMedia = attachment => {\n    const { dispatch } = this.props;\n    const statusId = attachment.getIn(['status', 'id']);\n    const lang = attachment.getIn(['status', 'language']);\n\n    if (attachment.get('type') === 'video') {\n      dispatch(openModal({\n        modalType: 'VIDEO',\n        modalProps: { media: attachment, statusId, lang, options: { autoPlay: true } },\n      }));\n    } else if (attachment.get('type') === 'audio') {\n      dispatch(openModal({\n        modalType: 'AUDIO',\n        modalProps: { media: attachment, statusId, lang, options: { autoPlay: true } },\n      }));\n    } else {\n      const media = attachment.getIn(['status', 'media_attachments']);\n      const index = media.findIndex(x => x.get('id') === attachment.get('id'));\n\n      dispatch(openModal({\n        modalType: 'MEDIA',\n        modalProps: { media, index, statusId, lang },\n      }));\n    }\n  };\n\n  handleRef = c => {\n    if (c) {\n      this.setState({ width: c.offsetWidth });\n    }\n  };\n\n  render () {\n    const { attachments, isLoading, hasMore, isAccount, settings, multiColumn, suspended } = this.props;\n    const { width } = this.state;\n\n    if (!isAccount) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    if (!attachments && isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    let loadOlder = null;\n\n    if (hasMore && !(isLoading && attachments.size === 0)) {\n      loadOlder = <LoadMore visible={!isLoading} onClick={this.handleLoadOlder} />;\n    }\n\n    return (\n      <Column ref={this.setColumnRef}>\n        <ProfileColumnHeader onClick={this.handleHeaderClick} multiColumn={multiColumn} />\n\n        <ScrollContainer scrollKey='account_gallery'>\n          <div className='scrollable scrollable--flex' onScroll={this.handleScroll}>\n            <HeaderContainer accountId={this.props.accountId} />\n\n            {suspended ? (\n              <div className='empty-column-indicator'>\n                <FormattedMessage id='empty_column.account_suspended' defaultMessage='Account suspended' />\n              </div>\n            ) : (\n              <div role='feed' className='account-gallery__container' ref={this.handleRef}>\n                {attachments.map((attachment, index) => attachment === null ? (\n                  <LoadMoreMedia key={'more:' + attachments.getIn(index + 1, 'id')} maxId={index > 0 ? attachments.getIn(index - 1, 'id') : null} onLoadMore={this.handleLoadMore} />\n                ) : (\n                  <MediaItem\n                    key={attachment.get('id')}\n                    attachment={attachment}\n                    displayWidth={width}\n                    onOpenMedia={this.handleOpenMedia}\n                    useBlurhash={settings.getIn(['media', 'use_blurhash'])}\n                  />\n                ))}\n\n                {loadOlder}\n              </div>\n            )}\n\n            {isLoading && attachments.size === 0 && (\n              <div className='scrollable__append'>\n                <LoadingIndicator />\n              </div>\n            )}\n          </div>\n        </ScrollContainer>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(AccountGallery);\n"],"sourceRoot":""}