{"version":3,"sources":["webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/ui/components/onboarding_modal.jsx"],"names":["noop","messages","defineMessages","home_title","id","defaultMessage","notifications_title","local_title","federated_title","PageOne","_ref","acct","domain","_jsx","className","style","flex","FormattedMessage","values","handle","PageTwo","_ref2","myAccount","DrawerAccount","account","ComposeForm","privacy","text","spoilerText","suggestions","PageThree","_ref3","Search","value","onChange","onSubmit","onClear","onShow","recent","illustration","Permalink","to","href","introductions","PageFour","_ref4","intl","ColumnHeader","icon","type","formatMessage","marginBottom","PageSix","_ref5","admin","adminSection","get","guidelines","target","fork","rel","Mastodon","github","source_url","apps","OnboardingModal","PureComponent","constructor","arguments","state","currentIndex","handleSkip","e","preventDefault","this","props","onClose","handleDot","i","Number","currentTarget","getAttribute","setState","handlePrev","_ref6","Math","max","handleNext","pages","_ref7","min","length","handleSwipe","index","handleKeyUp","_ref8","key","handleClose","UNSAFE_componentWillMount","componentDidMount","window","addEventListener","componentWillUnmount","render","nextOrDoneBtn","onClick","ReactSwipeableViews","onChangeIndex","map","page","classNames","_","active","role","tabIndex","connect","getIn","me","injectIntl"],"mappings":"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","file":"js/flavours/glitch/async/onboarding_modal.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport ReactSwipeableViews from 'react-swipeable-views';\n\nimport Permalink from 'flavours/glitch/components/permalink';\nimport ComposeForm from 'flavours/glitch/features/compose/components/compose_form';\nimport DrawerAccount from 'flavours/glitch/features/compose/components/navigation_bar';\nimport Search from 'flavours/glitch/features/compose/components/search';\nimport { me, source_url } from 'flavours/glitch/initial_state';\n\nimport ColumnHeader from './column_header';\n\nconst noop = () => { };\n\nconst messages = defineMessages({\n  home_title: { id: 'column.home', defaultMessage: 'Home' },\n  notifications_title: { id: 'column.notifications', defaultMessage: 'Notifications' },\n  local_title: { id: 'column.community', defaultMessage: 'Local timeline' },\n  federated_title: { id: 'column.public', defaultMessage: 'Federated timeline' },\n});\n\nconst PageOne = ({ acct, domain }) => (\n  <div className='onboarding-modal__page onboarding-modal__page-one'>\n    <div style={{ flex: '0 0 auto' }}>\n      <div className='onboarding-modal__page-one__elephant-friend' />\n    </div>\n\n    <div>\n      <h1><FormattedMessage id='onboarding.page_one.welcome' defaultMessage='Welcome to {domain}!' values={{ domain }} /></h1>\n      <p><FormattedMessage id='onboarding.page_one.federation' defaultMessage='{domain} is an \"instance\" of Mastodon. Mastodon is a network of independent servers joining up to make one larger social network. We call these servers instances.' values={{ domain }} /></p>\n      <p><FormattedMessage id='onboarding.page_one.handle' defaultMessage='You are on {domain}, so your full handle is {handle}' values={{ domain, handle: <strong>@{acct}@{domain}</strong> }} /></p>\n    </div>\n  </div>\n);\n\nPageOne.propTypes = {\n  acct: PropTypes.string.isRequired,\n  domain: PropTypes.string.isRequired,\n};\n\nconst PageTwo = ({ myAccount }) => (\n  <div className='onboarding-modal__page onboarding-modal__page-two'>\n    <div className='figure non-interactive'>\n      <div className='pseudo-drawer'>\n        <DrawerAccount account={myAccount} />\n        <ComposeForm\n          privacy='public'\n          text='Awoo! #introductions'\n          spoilerText=''\n          suggestions={[]}\n        />\n      </div>\n    </div>\n\n    <p><FormattedMessage id='onboarding.page_two.compose' defaultMessage='Write posts from the compose column. You can upload images, change privacy settings, and add content warnings with the icons below.' /></p>\n  </div>\n);\n\nPageTwo.propTypes = {\n  intl: PropTypes.object.isRequired,\n  myAccount: ImmutablePropTypes.map.isRequired,\n};\n\nconst PageThree = ({ myAccount }) => (\n  <div className='onboarding-modal__page onboarding-modal__page-three'>\n    <div className='figure non-interactive'>\n      <Search\n        value=''\n        onChange={noop}\n        onSubmit={noop}\n        onClear={noop}\n        onShow={noop}\n        recent={{}}\n      />\n\n      <div className='pseudo-drawer'>\n        <DrawerAccount account={myAccount} />\n      </div>\n    </div>\n\n    <p><FormattedMessage id='onboarding.page_three.search' defaultMessage='Use the search bar to find people and look at hashtags, such as {illustration} and {introductions}. To look for a person who is not on this instance, use their full handle.' values={{ illustration: <Permalink to='/tag/illustration' href='/tags/illustration'>#illustration</Permalink>, introductions: <Permalink to='/tag/introductions' href='/tags/introductions'>#introductions</Permalink> }} /></p>\n    <p><FormattedMessage id='onboarding.page_three.profile' defaultMessage='Edit your profile to change your avatar, bio, and display name. There, you will also find other preferences.' /></p>\n  </div>\n);\n\nPageThree.propTypes = {\n  intl: PropTypes.object.isRequired,\n  myAccount: ImmutablePropTypes.map.isRequired,\n};\n\nconst PageFour = ({ domain, intl }) => (\n  <div className='onboarding-modal__page onboarding-modal__page-four'>\n    <div className='onboarding-modal__page-four__columns'>\n      <div className='row'>\n        <div>\n          <div className='figure non-interactive'><ColumnHeader icon='home' type={intl.formatMessage(messages.home_title)} /></div>\n          <p><FormattedMessage id='onboarding.page_four.home' defaultMessage='The home timeline shows posts from people you follow.' /></p>\n        </div>\n\n        <div>\n          <div className='figure non-interactive'><ColumnHeader icon='bell' type={intl.formatMessage(messages.notifications_title)} /></div>\n          <p><FormattedMessage id='onboarding.page_four.notifications' defaultMessage='The notifications column shows when someone interacts with you.' /></p>\n        </div>\n      </div>\n\n      <div className='row'>\n        <div>\n          <div className='figure non-interactive' style={{ marginBottom: 0 }}><ColumnHeader icon='users' type={intl.formatMessage(messages.local_title)} /></div>\n        </div>\n\n        <div>\n          <div className='figure non-interactive' style={{ marginBottom: 0 }}><ColumnHeader icon='globe' type={intl.formatMessage(messages.federated_title)} /></div>\n        </div>\n      </div>\n\n      <p><FormattedMessage id='onboarding.page_five.public_timelines' defaultMessage='The local timeline shows public posts from everyone on {domain}. The federated timeline shows public posts from everyone who people on {domain} follow. These are the Public Timelines, a great way to discover new people.' values={{ domain }} /></p>\n    </div>\n  </div>\n);\n\nPageFour.propTypes = {\n  domain: PropTypes.string.isRequired,\n  intl: PropTypes.object.isRequired,\n};\n\nconst PageSix = ({ admin, domain }) => {\n  let adminSection = '';\n\n  if (admin) {\n    adminSection = (\n      <p>\n        <FormattedMessage id='onboarding.page_six.admin' defaultMessage=\"Your instance's admin is {admin}.\" values={{ admin: <Permalink href={admin.get('url')} to={`/@${admin.get('acct')}`}>@{admin.get('acct')}</Permalink> }} />\n        <br />\n        <FormattedMessage id='onboarding.page_six.read_guidelines' defaultMessage=\"Please read {domain}'s {guidelines}!\" values={{ domain, guidelines: <a href='/about/more' target='_blank'><FormattedMessage id='onboarding.page_six.guidelines' defaultMessage='community guidelines' /></a> }} />\n      </p>\n    );\n  }\n\n  return (\n    <div className='onboarding-modal__page onboarding-modal__page-six'>\n      <h1><FormattedMessage id='onboarding.page_six.almost_done' defaultMessage='Almost done...' /></h1>\n      {adminSection}\n      <p>\n        <FormattedMessage\n          id='onboarding.page_six.github'\n          defaultMessage='{domain} runs on Glitchsoc. Glitchsoc is a friendly {fork} of {Mastodon}. Glitchsoc is fully compatible with all Mastodon apps and instances. Glitchsoc is free open-source software. You can report bugs, request features, or contribute to the code on {github}.'\n          values={{\n            domain,\n            fork: <a href='https://en.wikipedia.org/wiki/Fork_(software_development)' target='_blank' rel='noopener'>fork</a>,\n            Mastodon: <a href='https://github.com/mastodon/mastodon' target='_blank' rel='noopener'>Mastodon</a>,\n            github: <a href={source_url} target='_blank' rel='noopener'>GitHub</a>,\n          }}\n        />\n      </p>\n      <p><FormattedMessage id='onboarding.page_six.apps_available' defaultMessage='There are {apps} available for iOS, Android and other platforms.' values={{ domain, apps: <a href='https://joinmastodon.org/apps' target='_blank' rel='noopener'><FormattedMessage id='onboarding.page_six.various_app' defaultMessage='mobile apps' /></a> }} /></p>\n      <p><em><FormattedMessage id='onboarding.page_six.appetoot' defaultMessage='Bon Appetoot!' /></em></p>\n    </div>\n  );\n};\n\nPageSix.propTypes = {\n  admin: ImmutablePropTypes.map,\n  domain: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  myAccount: state.getIn(['accounts', me]),\n  admin: state.getIn(['accounts', state.getIn(['meta', 'admin'])]),\n  domain: state.getIn(['meta', 'domain']),\n});\n\nclass OnboardingModal extends PureComponent {\n\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    myAccount: ImmutablePropTypes.map.isRequired,\n    domain: PropTypes.string.isRequired,\n    admin: ImmutablePropTypes.map,\n  };\n\n  state = {\n    currentIndex: 0,\n  };\n\n  UNSAFE_componentWillMount() {\n    const { myAccount, admin, domain, intl } = this.props;\n    this.pages = [\n      <PageOne key='1' acct={myAccount.get('acct')} domain={domain} />,\n      <PageTwo key='2' myAccount={myAccount} intl={intl} />,\n      <PageThree key='3' myAccount={myAccount} intl={intl} />,\n      <PageFour key='4' domain={domain} intl={intl} />,\n      <PageSix key='6' admin={admin} domain={domain} />,\n    ];\n  }\n\n  componentDidMount() {\n    window.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    window.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleSkip = (e) => {\n    e.preventDefault();\n    this.props.onClose();\n  };\n\n  handleDot = (e) => {\n    const i = Number(e.currentTarget.getAttribute('data-index'));\n    e.preventDefault();\n    this.setState({ currentIndex: i });\n  };\n\n  handlePrev = () => {\n    this.setState(({ currentIndex }) => ({\n      currentIndex: Math.max(0, currentIndex - 1),\n    }));\n  };\n\n  handleNext = () => {\n    const { pages } = this;\n    this.setState(({ currentIndex }) => ({\n      currentIndex: Math.min(currentIndex + 1, pages.length - 1),\n    }));\n  };\n\n  handleSwipe = (index) => {\n    this.setState({ currentIndex: index });\n  };\n\n  handleKeyUp = ({ key }) => {\n    switch (key) {\n    case 'ArrowLeft':\n      this.handlePrev();\n      break;\n    case 'ArrowRight':\n      this.handleNext();\n      break;\n    }\n  };\n\n  handleClose = () => {\n    this.props.onClose();\n  };\n\n  render () {\n    const { pages } = this;\n    const { currentIndex } = this.state;\n    const hasMore = currentIndex < pages.length - 1;\n\n    const nextOrDoneBtn = hasMore ? (\n      <button\n        onClick={this.handleNext}\n        className='onboarding-modal__nav onboarding-modal__next'\n      >\n        <FormattedMessage id='onboarding.next' defaultMessage='Next' />\n      </button>\n    ) : (\n      <button\n        onClick={this.handleClose}\n        className='onboarding-modal__nav onboarding-modal__done'\n      >\n        <FormattedMessage id='onboarding.done' defaultMessage='Done' />\n      </button>\n    );\n\n    return (\n      <div className='modal-root__modal onboarding-modal'>\n        <ReactSwipeableViews index={currentIndex} onChangeIndex={this.handleSwipe} className='onboarding-modal__pager'>\n          {pages.map((page, i) => {\n            const className = classNames('onboarding-modal__page__wrapper', {\n              'onboarding-modal__page__wrapper--active': i === currentIndex,\n            });\n            return (\n              <div key={i} className={className}>{page}</div>\n            );\n          })}\n        </ReactSwipeableViews>\n\n        <div className='onboarding-modal__paginator'>\n          <div>\n            <button\n              onClick={this.handleSkip}\n              className='onboarding-modal__nav onboarding-modal__skip'\n            >\n              <FormattedMessage id='onboarding.skip' defaultMessage='Skip' />\n            </button>\n          </div>\n\n          <div className='onboarding-modal__dots'>\n            {pages.map((_, i) => {\n              const className = classNames('onboarding-modal__dot', {\n                active: i === currentIndex,\n              });\n              return (\n                <div\n                  key={`dot-${i}`}\n                  role='button'\n                  tabIndex={0}\n                  data-index={i}\n                  onClick={this.handleDot}\n                  className={className}\n                />\n              );\n            })}\n          </div>\n\n          <div>\n            {nextOrDoneBtn}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(OnboardingModal));\n"],"sourceRoot":""}