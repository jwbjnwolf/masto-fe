{"version":3,"sources":["webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/status/components/action_bar.jsx","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/components/edited_timestamp/containers/dropdown_menu_container.js","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/components/edited_timestamp/index.jsx","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/status/components/detailed_status.jsx","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/status/index.jsx"],"names":["messages","defineMessages","delete","id","defaultMessage","redraft","edit","direct","mention","reply","reblog","reblog_private","cancel_reblog_private","cannot_reblog","favourite","bookmark","more","mute","muteConversation","unmuteConversation","block","report","share","pin","unpin","embed","admin_account","admin_status","admin_domain","copy","openOriginalPage","ActionBar","PureComponent","constructor","arguments","handleReplyClick","this","props","onReply","status","handleReblogClick","e","onReblog","handleFavouriteClick","onFavourite","handleBookmarkClick","onBookmark","handleDeleteClick","onDelete","context","router","history","handleRedraftClick","handleEditClick","onEdit","handleDirectClick","onDirect","get","handleMentionClick","onMention","handleMuteClick","onMute","handleConversationMuteClick","onMuteConversation","handleBlockClick","onBlock","handleReport","onReport","handlePinClick","onPin","handleShare","navigator","url","handleEmbed","onEmbed","handleCopy","clipboard","writeText","render","intl","signedIn","permissions","identity","publicStatus","includes","pinnableStatus","mutingConversation","writtenByMe","getIn","me","isRemote","menu","push","text","formatMessage","href","action","dangerous","name","PERMISSION_MANAGE_USERS","accountAdminLink","statusAdminLink","PERMISSION_MANAGE_FEDERATION","undefined","domain","split","reblogPrivate","reblogTitle","_jsx","className","IconButton","title","icon","onClick","classNames","disabled","active","animate","DropdownMenuContainer","size","items","direction","contextTypes","PropTypes","object","injectIntl","connect","mapStateToProps","state","_ref","statusId","openDropdownId","dropdownMenu","openId","openedViaKeyboard","keyboard","loading","mapDispatchToProps","dispatch","_ref2","onOpen","onItemClick","fetchHistory","openDropdownMenu","onClose","closeDropdownMenu","DropdownMenu","EditedTimestamp","handleItemClick","item","i","renderHeader","FormattedMessage","values","count","renderItem","index","onKeyPress","formattedDate","RelativeTimestamp","timestamp","short","formattedName","InlineAccount","accountId","label","date","scrollable","formatDate","hourCycle","month","day","hour","minute","Icon","openModal","modalType","modalProps","DetailedStatus","ImmutablePureComponent","height","handleAccountClick","button","ctrlKey","altKey","metaKey","preventDefault","stopPropagation","parseClick","destination","handleOpenVideo","options","onOpenVideo","setRef","c","node","_measureHeight","handleChildUpdate","handleModalLink","target","nodeName","parentNode","window","open","handleTranslate","onTranslate","heightJustChanged","measureHeight","scheduleIdleTask","setState","Math","ceil","scrollHeight","onHeightChange","componentDidUpdate","prevProps","prevState","outerStyle","boxSizing","compact","pictureInPicture","expanded","onToggleHidden","settings","applicationLink","reblogLink","reblogIcon","favouriteLink","edited","contentMedia","contentMediaIcons","extraMedia","extraMediaIcons","media","mediaIcons","language","PictureInPicturePlaceholder","some","AttachmentList","attachment","description","Audio","src","alt","lang","duration","poster","backgroundColor","foregroundColor","accentColor","sensitive","visible","showMedia","blurhash","onToggleVisibility","onToggleMediaVisibility","Video","preview","frameRate","inline","letterbox","fullwidth","preventPlayback","autoplay","MediaGallery","standalone","hidden","onOpenMedia","Card","card","PollContainer","pollId","_jsxs","_Fragment","children","rel","visibilityLink","VisibilityIcon","visibility","Link","to","AnimatedNumber","value","style","ref","Avatar","account","DisplayName","localDomain","StatusContent","collapsed","onExpandedToggle","onUpdate","tagLinks","rewriteMentions","FormattedDate","Date","year","propTypes","ImmutablePropTypes","map","isRequired","func","bool","string","contains","inUse","available","deleteConfirm","deleteMessage","redraftConfirm","redraftMessage","revealAll","hideAll","statusTitleWithAttachments","detailedStatus","replyConfirm","replyMessage","tootHeading","titleFromStatus","displayName","username","user","trim","length","attachmentCount","truncate","str","num","arr","Array","from","slice","join","Status","_this","fullscreen","isExpanded","threadExpanded","loadedStatusId","revealBehindCW","handleToggleHidden","revealStatus","hideStatus","setExpansion","handleToggleMediaVisibility","handleModalFavourite","unfavourite","shiftKey","favouriteModal","type","handlePin","askReplyConfirmation","message","confirm","onDoNotAsk","changeLocalSetting","onConfirm","replyCompose","handleModalReblog","privacy","unreblog","initBoostModal","missingMediaDescription","boostModal","unbookmark","withRedraft","deleteModal","deleteStatus","editStatus","directCompose","mentionCompose","handleOpenMedia","handleHotkeyOpenMedia","startTime","initMuteModal","unmuteStatus","muteStatus","handleToggleAll","ancestorsIds","descendantsIds","statusIds","concat","toJS","undoStatusTranslation","translateStatus","initBlockModal","initReport","handleHotkeyToggleSensitive","handleHotkeyMoveUp","handleMoveUp","handleHotkeyMoveDown","handleMoveDown","handleHotkeyReply","handleHotkeyFavourite","handleHotkeyBoost","handleHotkeyBookmark","handleHotkeyMention","handleHotkeyOpenProfile","_selectChild","indexOf","handleHeaderClick","column","scrollTop","setColumnRef","onFullScreenChange","isFullscreen","shouldUpdateScroll","prevRouterProps","_ref3","_location$state","_prevRouterProps$loca","_this$node","location","mastodonModalKey","child","querySelector","offsetTop","componentDidMount","attachFullscreenListener","fetchStatus","params","_scrollStatusIntoView","getDerivedStateFromProps","update","updated","defaultMediaVisibility","autoUnfoldCW","align_top","container","element","querySelectorAll","scrollIntoView","clientHeight","offsetHeight","focus","renderChildren","list","ancestors","StatusContainer","onMoveUp","onMoveDown","contextType","previousId","nextId","rootId","multiColumn","requestAnimationFrame","_this$node2","_document$querySelect","offset","document","getBoundingClientRect","bottom","scrollingElement","body","scrollBy","_prevProps$status","componentWillUnmount","detachFullscreenListener","descendants","isLoading","Column","LoadingIndicator","BundleColumnError","errorType","_jsx2","isLocal","isIndexable","handlers","moveUp","moveDown","boost","openProfile","toggleSpoiler","toggleSensitive","openMedia","bindToDocument","ColumnHeader","showBackButton","extraButton","ScrollContainer","scrollKey","HotKeys","tabIndex","textForScreenReader","Helmet","content","makeMapStateToProps","getStatus","makeGetStatus","getPictureInPicture","makeGetPictureInPicture","getAncestorsIds","createSelector","_","inReplyTos","Immutable","List","withMutations","mutable","unshift","getDescendantsIds","contextReplies","statuses","ids","pop","replies","reverse","forEach","insertAt","findIndex","idx","splice"],"mappings":"ucAeA,MAAMA,EAAWC,YAAe,CAC9BC,OAAQ,CAAEC,GAAG,gBAAkBC,eAAe,UAC9CC,QAAS,CAAEF,GAAG,iBAAmBC,eAAe,qBAChDE,KAAM,CAAEH,GAAG,cAAgBC,eAAe,QAC1CG,OAAQ,CAAEJ,GAAG,gBAAkBC,eAAe,6BAC9CI,QAAS,CAAEL,GAAG,iBAAmBC,eAAe,mBAChDK,MAAO,CAAEN,GAAG,eAAiBC,eAAe,SAC5CM,OAAQ,CAAEP,GAAG,gBAAkBC,eAAe,SAC9CO,eAAgB,CAAER,GAAG,wBAA0BC,eAAe,kCAC9DQ,sBAAuB,CAAET,GAAG,+BAAiCC,eAAe,WAC5ES,cAAe,CAAEV,GAAG,uBAAyBC,eAAe,+BAC5DU,UAAW,CAAEX,GAAG,mBAAqBC,eAAe,YACpDW,SAAU,CAAEZ,GAAG,kBAAoBC,eAAe,YAClDY,KAAM,CAAEb,GAAG,cAAgBC,eAAe,QAC1Ca,KAAM,CAAEd,GAAG,cAAgBC,eAAe,gBAC1Cc,iBAAkB,CAAEf,GAAG,2BAA6BC,eAAe,qBACnEe,mBAAoB,CAAEhB,GAAG,6BAA+BC,eAAe,uBACvEgB,MAAO,CAAEjB,GAAG,eAAiBC,eAAe,iBAC5CiB,OAAQ,CAAElB,GAAG,gBAAkBC,eAAe,kBAC9CkB,MAAO,CAAEnB,GAAG,eAAiBC,eAAe,SAC5CmB,IAAK,CAAEpB,GAAG,aAAeC,eAAe,kBACxCoB,MAAO,CAAErB,GAAG,eAAiBC,eAAe,sBAC5CqB,MAAO,CAAEtB,GAAG,eAAiBC,eAAe,SAC5CsB,cAAe,CAAEvB,GAAG,uBAAyBC,eAAe,yCAC5DuB,aAAc,CAAExB,GAAG,sBAAwBC,eAAe,8CAC1DwB,aAAc,CAAEzB,GAAG,sBAAwBC,eAAe,0CAC1DyB,KAAM,CAAE1B,GAAG,cAAgBC,eAAe,qBAC1C0B,iBAAkB,CAAE3B,GAAG,6BAA+BC,eAAe,wBAGvE,MAAM2B,UAAkBC,gBAAcC,cAAA,SAAAC,WAAA,KA0BpCC,iBAAmB,KACjBC,KAAKC,MAAMC,QAAQF,KAAKC,MAAME,OAAO,EACrC,KAEFC,kBAAqBC,IACnBL,KAAKC,MAAMK,SAASN,KAAKC,MAAME,OAAQE,EAAE,EACzC,KAEFE,qBAAwBF,IACtBL,KAAKC,MAAMO,YAAYR,KAAKC,MAAME,OAAQE,EAAE,EAC5C,KAEFI,oBAAuBJ,IACrBL,KAAKC,MAAMS,WAAWV,KAAKC,MAAME,OAAQE,EAAE,EAC3C,KAEFM,kBAAoB,KAClBX,KAAKC,MAAMW,SAASZ,KAAKC,MAAME,OAAQH,KAAKa,QAAQC,OAAOC,QAAQ,EACnE,KAEFC,mBAAqB,KACnBhB,KAAKC,MAAMW,SAASZ,KAAKC,MAAME,OAAQH,KAAKa,QAAQC,OAAOC,SAAS,EAAK,EACzE,KAEFE,gBAAkB,KAChBjB,KAAKC,MAAMiB,OAAOlB,KAAKC,MAAME,OAAQH,KAAKa,QAAQC,OAAOC,QAAQ,EACjE,KAEFI,kBAAoB,KAClBnB,KAAKC,MAAMmB,SAASpB,KAAKC,MAAME,OAAOkB,IAAI,WAAYrB,KAAKa,QAAQC,OAAOC,QAAQ,EAClF,KAEFO,mBAAqB,KACnBtB,KAAKC,MAAMsB,UAAUvB,KAAKC,MAAME,OAAOkB,IAAI,WAAYrB,KAAKa,QAAQC,OAAOC,QAAQ,EACnF,KAEFS,gBAAkB,KAChBxB,KAAKC,MAAMwB,OAAOzB,KAAKC,MAAME,OAAOkB,IAAI,WAAW,EACnD,KAEFK,4BAA8B,KAC5B1B,KAAKC,MAAM0B,mBAAmB3B,KAAKC,MAAME,OAAO,EAChD,KAEFyB,iBAAmB,KACjB5B,KAAKC,MAAM4B,QAAQ7B,KAAKC,MAAME,OAAO,EACrC,KAEF2B,aAAe,KACb9B,KAAKC,MAAM8B,SAAS/B,KAAKC,MAAME,OAAO,EACtC,KAEF6B,eAAiB,KACfhC,KAAKC,MAAMgC,MAAMjC,KAAKC,MAAME,OAAO,EACnC,KAEF+B,YAAc,KACZC,UAAUjD,MAAM,CACdkD,IAAKpC,KAAKC,MAAME,OAAOkB,IAAI,QAC3B,EACF,KAEFgB,YAAc,KACZrC,KAAKC,MAAMqC,QAAQtC,KAAKC,MAAME,OAAO,EACrC,KAEFoC,WAAa,KACX,MAAMH,EAAMpC,KAAKC,MAAME,OAAOkB,IAAI,OAClCc,UAAUK,UAAUC,UAAUL,EAAI,CAClC,CAEFM,SACE,MAAM,OAAEvC,EAAM,KAAEwC,GAAS3C,KAAKC,OACxB,SAAE2C,EAAQ,YAAEC,GAAgB7C,KAAKa,QAAQiC,SAEzCC,EAAqB,CAAC,SAAU,YAAYC,SAAS7C,EAAOkB,IAAI,eAChE4B,EAAqB,CAAC,SAAU,WAAY,WAAWD,SAAS7C,EAAOkB,IAAI,eAC3E6B,EAAqB/C,EAAOkB,IAAI,SAChC8B,EAAqBhD,EAAOiD,MAAM,CAAC,UAAW,SAAWC,IACzDC,EAAqBnD,EAAOiD,MAAM,CAAC,UAAW,eAAiBjD,EAAOiD,MAAM,CAAC,UAAW,SAE9F,IAAIG,EAAO,GAgBX,GAdIR,GAAgBO,GAClBC,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAAS8B,kBAAmBiE,KAAMxD,EAAOkB,IAAI,SAGpFkC,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAAS6B,MAAOmE,OAAQ5D,KAAKuC,aAE9DQ,GAAgB,UAAWZ,WAC7BoB,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAASsB,OAAQ0E,OAAQ5D,KAAKkC,eAGjEa,IAAiBH,GAAaU,GAChCC,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAASyB,OAAQuE,OAAQ5D,KAAKqC,cAGjEO,EAGF,GAFAW,EAAKC,KAAK,MAENL,EACEF,IACFM,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAcvD,EAAOkB,IAAI,UAAYzD,EAASwB,MAAQxB,EAASuB,KAAMyE,OAAQ5D,KAAKgC,iBACzGuB,EAAKC,KAAK,OAGZD,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAcR,EAAqBtF,EAASmB,mBAAqBnB,EAASkB,kBAAmB8E,OAAQ5D,KAAK0B,8BACjI6B,EAAKC,KAAK,MACVD,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAASM,MAAO0F,OAAQ5D,KAAKiB,kBAClEsC,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAASE,QAAS8F,OAAQ5D,KAAKW,kBAAmBkD,WAAW,IAClGN,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAASK,SAAU2F,OAAQ5D,KAAKgB,mBAAoB6C,WAAW,SAQpG,GANAN,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAASQ,QAAS,CAAE0F,KAAM3D,EAAOiD,MAAM,CAAC,UAAW,eAAiBQ,OAAQ5D,KAAKsB,qBACtHiC,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAASO,OAAQ,CAAE2F,KAAM3D,EAAOiD,MAAM,CAAC,UAAW,eAAiBQ,OAAQ5D,KAAKmB,oBACrHoC,EAAKC,KAAK,MACVD,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAASiB,KAAM,CAAEiF,KAAM3D,EAAOiD,MAAM,CAAC,UAAW,eAAiBQ,OAAQ5D,KAAKwB,gBAAiBqC,WAAW,IAC/IN,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAASoB,MAAO,CAAE8E,KAAM3D,EAAOiD,MAAM,CAAC,UAAW,eAAiBQ,OAAQ5D,KAAK4B,iBAAkBiC,WAAW,IACjJN,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAASqB,OAAQ,CAAE6E,KAAM3D,EAAOiD,MAAM,CAAC,UAAW,eAAiBQ,OAAQ5D,KAAK8B,aAAc+B,WAAW,MACxIhB,EAAckB,OAA6BA,MAA4BC,KAAoBC,MAAsBX,IAAaT,EAAcqB,OAAkCA,OAClLX,EAAKC,KAAK,OACLX,EAAckB,OAA6BA,WACrBI,IAArBH,KACFT,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAAS0B,cAAe,CAAEwE,KAAM3D,EAAOiD,MAAM,CAAC,UAAW,eAAiBO,KAAMK,YAAiB7D,EAAOiD,MAAM,CAAC,UAAW,eAEzIe,IAApBF,KACFV,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAAS2B,cAAeoE,KAAMM,YAAgB9D,EAAOiD,MAAM,CAAC,UAAW,OAAQjD,EAAOkB,IAAI,UAG/HiC,IAAaT,EAAcqB,OAAkCA,KAA8B,CAC7F,MAAME,EAASjE,EAAOiD,MAAM,CAAC,UAAW,SAASiB,MAAM,KAAK,GAC5Dd,EAAKC,KAAK,CAAEC,KAAMd,EAAKe,cAAc9F,EAAS4B,aAAc,CAAE4E,OAAQA,IAAWT,KAAO,oBAAmBS,KAC7G,CAKN,MAAME,EAAgBnE,EAAOiD,MAAM,CAAC,UAAW,SAAWC,KAAmC,YAA7BlD,EAAOkB,IAAI,cAE3E,IAAIkD,EAWJ,OATEA,EADEpE,EAAOkB,IAAI,aACCsB,EAAKe,cAAc9F,EAASY,uBACjCuE,EACKJ,EAAKe,cAAc9F,EAASU,QACjCgG,EACK3B,EAAKe,cAAc9F,EAASW,gBAE5BoE,EAAKe,cAAc9F,EAASa,eAI1C+F,YAAA,OAAKC,UAAU,oCAA6B,EAC1CD,YAAA,OAAKC,UAAU,gCAAyB,EAACD,YAACE,IAAU,CAACC,MAAOhC,EAAKe,cAAc9F,EAASS,OAAQuG,KAA6C,OAAvCzE,EAAOkB,IAAI,iBAAkB,MAAiB,QAAU,YAAawD,QAAS7E,KAAKD,oBACzLyE,YAAA,OAAKC,UAAU,gCAAyB,EAACD,YAACE,IAAU,CAACD,UAAWK,IAAW,CAAER,kBAAkBS,UAAWhC,IAAiBuB,EAAeU,OAAQ7E,EAAOkB,IAAI,aAAcsD,MAAOJ,EAAaK,KAAK,UAAUC,QAAS7E,KAAKI,qBAC5NoE,YAAA,OAAKC,UAAU,gCAAyB,EAACD,YAACE,IAAU,CAACD,UAAU,YAAYQ,SAAO,EAACD,OAAQ7E,EAAOkB,IAAI,cAAesD,MAAOhC,EAAKe,cAAc9F,EAASc,WAAYkG,KAAK,OAAOC,QAAS7E,KAAKO,wBAC9LiE,YAAA,OAAKC,UAAU,gCAAyB,EAACD,YAACE,IAAU,CAACD,UAAU,gBAAgBM,UAAWnC,EAAUoC,OAAQ7E,EAAOkB,IAAI,cAAesD,MAAOhC,EAAKe,cAAc9F,EAASe,UAAWiG,KAAK,WAAWC,QAAS7E,KAAKS,uBAElN+D,YAAA,OAAKC,UAAU,6CAAsC,EACnDD,YAACU,IAAqB,CAACC,KAAM,GAAIP,KAAK,aAAaQ,MAAO7B,EAAM8B,UAAU,OAAOV,MAAOhC,EAAKe,cAAc9F,EAASgB,SAI5H,EA3LIe,EAEG2F,aAAe,CACpBxE,OAAQyE,IAAUC,OAClB1C,SAAUyC,IAAUC,QA2LTC,kBAAW9F,G,yGC7MX+F,0BApBSC,CAACC,EAAKC,KAAA,IAAE,SAAEC,GAAUD,EAAA,MAAM,CAChDE,eAAgBH,EAAMI,aAAaC,OACnCC,kBAAmBN,EAAMI,aAAaG,SACtCf,MAAOQ,EAAMxC,MAAM,CAAC,UAAW0C,EAAU,UACzCM,QAASR,EAAMxC,MAAM,CAAC,UAAW0C,EAAU,YAC5C,IAE0BO,CAACC,EAAQC,KAAA,IAAE,SAAET,GAAUS,EAAA,MAAM,CAEtDC,OAAQzI,EAAI0I,EAAaN,GACvBG,EAASI,aAAaZ,IACtBQ,EAASK,aAAiB,CAAE5I,KAAIoI,aAClC,EAEAS,QAAS7I,GACPuI,EAASO,aAAkB,CAAE9I,OAC/B,EAED,GAEc2H,CAA6CoB,MCN5D,MAAMC,WAAwBnH,gBAAcC,cAAA,SAAAC,WAAA,KAS1CkH,gBAAkB,CAACC,EAAMC,KACvB,MAAM,YAAET,GAAgBzG,KAAKC,MAC7BwG,EAAYS,EAAE,EACd,KAEFC,aAAe/B,GAEXZ,YAAC4C,IAAgB,CAACrJ,GAAE,wBAAyBC,eAAe,uDAAuDqJ,OAAQ,CAAEC,MAAOlC,EAAMD,KAAO,KAEnJ,KAEFoC,WAAa,CAACN,EAAMO,EAAKjB,KAA+B,IAA7B,QAAE1B,EAAO,WAAE4C,GAAYlB,EAChD,MAAMmB,EAAgBlD,YAACmD,KAAiB,CAACC,UAAWX,EAAK5F,IAAI,cAAewG,OAAO,IAC7EC,EAAgBtD,YAACuD,IAAa,CAACC,UAAWf,EAAK5F,IAAI,aAEnD4G,EAAQhB,EAAK5F,IAAI,YACrBmD,YAAC4C,IAAgB,CAACrJ,GAAE,yBAA0BC,eAAe,wBAAwBqJ,OAAQ,CAAEvD,KAAMgE,EAAeI,KAAMR,KAE1HlD,YAAC4C,IAAgB,CAACrJ,GAAE,wBAAyBC,eAAe,uBAAuBqJ,OAAQ,CAAEvD,KAAMgE,EAAeI,KAAMR,KAG1H,OACElD,YAAA,MAAIC,UAAU,uDAA2DwC,EAAK5F,IAAI,cAChFmD,YAAA,UAAQ,aAAYgD,EAAO3C,QAASA,EAAS4C,WAAYA,QAAW,EAAEQ,GACnE,CAEP,CAEFvF,SACE,MAAM,UAAEkF,EAAS,KAAEjF,EAAI,SAAEmD,GAAa9F,KAAKC,MAE3C,OACEuE,YAACsC,GAAY,CAAChB,SAAUA,EAAUyB,WAAYvH,KAAKuH,WAAYY,YAAU,EAAChB,aAAcnH,KAAKmH,aAAcV,YAAazG,KAAKgH,sBAAgB,EAC3IxC,YAAA,UAAQC,UAAU,mCAA4B,EAC5CD,YAAC4C,IAAgB,CAACrJ,GAAE,gBAAiBC,eAAe,gBAAgBqJ,OAAQ,CAAEa,KAAMvF,EAAKyF,WAAWR,EAAW,CAAES,UAAW,MAAOC,MAAO,QAASC,IAAK,UAAWC,KAAM,UAAWC,OAAQ,eAAkB,IAACjE,YAACkE,IAAI,CAAC3K,GAAG,gBAIhO,EAIa2H,yBAAQ,MA9DIW,CAACC,EAAQT,KAAA,IAAE,SAAEC,GAAUD,EAAA,MAAM,CAEtDY,YAAae,GACXlB,EAASqC,YAAU,CACjBC,UAAW,kBACXC,WAAY,CAAErB,QAAO1B,cAEzB,EAED,GAqDcJ,CAAkCD,YAAWsB,K,uGC7C5D,MAAM+B,WAAuBC,IAAuBlJ,cAAA,SAAAC,WAAA,KA2BlD8F,MAAQ,CACNoD,OAAQ,MACR,KAEFC,mBAAsB5I,IACH,IAAbA,EAAE6I,UAAkB7I,EAAE8I,SAAW9I,EAAE+I,QAAU/I,EAAEgJ,UAAYrJ,KAAKa,QAAQC,SAC1ET,EAAEiJ,iBACFtJ,KAAKa,QAAQC,OAAOC,QAAQyC,KAAM,KAAIxD,KAAKC,MAAME,OAAOiD,MAAM,CAAC,UAAW,aAG5E/C,EAAEkJ,iBAAiB,EACnB,KAEFC,WAAa,CAACnJ,EAAGoJ,KACE,IAAbpJ,EAAE6I,UAAkB7I,EAAE8I,SAAW9I,EAAE+I,QAAU/I,EAAEgJ,UAAYrJ,KAAKa,QAAQC,SAC1ET,EAAEiJ,iBACFtJ,KAAKa,QAAQC,OAAOC,QAAQyC,KAAKiG,IAGnCpJ,EAAEkJ,iBAAiB,EACnB,KAEFG,gBAAmBC,IACjB3J,KAAKC,MAAM2J,YAAY5J,KAAKC,MAAME,OAAOiD,MAAM,CAAC,oBAAqB,IAAKuG,EAAQ,EAClF,KAYFE,OAASC,IACP9J,KAAK+J,KAAOD,EACZ9J,KAAKgK,gBAAgB,EACrB,KAMFC,kBAAoB,KAClBjK,KAAKgK,gBAAgB,EACrB,KAEFE,gBAAkB7J,IAGhB,IAAIsD,EAFJtD,EAAEiJ,iBAKA3F,EADwB,MAAtBtD,EAAE8J,OAAOC,SACJ/J,EAAE8J,OAAOE,WAAW1G,KAEpBtD,EAAE8J,OAAOxG,KAGlB2G,OAAOC,KAAK5G,EAAM,kBAAmB,wEAAwE,EAC7G,KAEF6G,gBAAkB,KAChB,MAAM,YAAEC,EAAW,OAAEtK,GAAWH,KAAKC,MACrCwK,EAAYtK,EAAO,CACnB,CAxCF6J,eAAgBU,GACV1K,KAAKC,MAAM0K,eAAiB3K,KAAK+J,OACnCa,cAAiB,IAAM5K,KAAK+J,MAAQ/J,KAAK6K,SAAS,CAAE7B,OAAQ8B,KAAKC,KAAK/K,KAAK+J,KAAKiB,cAAgB,MAE5FhL,KAAKC,MAAMgL,gBAAkBP,GAC/B1K,KAAKC,MAAMgL,iBAGjB,CAOAC,mBAAoBC,EAAWC,GAC7BpL,KAAKgK,eAAeoB,EAAUpC,SAAWhJ,KAAK4F,MAAMoD,OACtD,CAyBAtG,SACE,MAAMvC,EAAUH,KAAKC,MAAME,QAAUH,KAAKC,MAAME,OAAOkB,IAAI,UAAarB,KAAKC,MAAME,OAAOkB,IAAI,UAAYrB,KAAKC,MAAME,OAC/GkL,EAAa,CAAEC,UAAW,eAC1B,QAAEC,EAAO,iBAAEC,EAAgB,SAAEC,EAAQ,eAAEC,EAAc,SAAEC,GAAa3L,KAAKC,MAE/E,IAAKE,EACH,OAAO,KAGT,IAAIyL,EAAkB,GAClBC,EAAa,GACbC,EAAa,UACbC,EAAgB,GAChBC,EAAS,GAKTC,EAAe,GACfC,EAAoB,GACpBC,EAAa,GACbC,EAAkB,GAClBC,EAAQJ,EACRK,EAAaJ,EAEbP,EAASvI,MAAM,CAAC,mBAAoB,oBACtCiJ,EAAQF,EACRG,EAAaF,GAGXpM,KAAKC,MAAM0K,gBACbU,EAAWrC,OAAU,GAAEhJ,KAAK4F,MAAMoD,YAGpC,MAAMuD,EAAWpM,EAAOiD,MAAM,CAAC,cAAe,cAAgBjD,EAAOkB,IAAI,YAEzE,GAAImK,EAAiBnK,IAAI,SACvBgL,EAAM7I,KAAKgB,YAACgI,KAA2B,KACvCF,EAAW9I,KAAK,qBACX,GAAIrD,EAAOkB,IAAI,qBAAqB8D,KAAO,EAChD,GAAIhF,EAAOkB,IAAI,qBAAqBoL,MAAKxF,GAA6B,YAArBA,EAAK5F,IAAI,UACxDgL,EAAM7I,KAAKgB,YAACkI,IAAc,CAACL,MAAOlM,EAAOkB,IAAI,6BACxC,GAAuD,UAAnDlB,EAAOiD,MAAM,CAAC,oBAAqB,EAAG,SAAsB,CACrE,MAAMuJ,EAAaxM,EAAOiD,MAAM,CAAC,oBAAqB,IAChDwJ,EAAcD,EAAWvJ,MAAM,CAAC,cAAe,iBAAmBuJ,EAAWtL,IAAI,eAEvFgL,EAAM7I,KACJgB,YAACqI,WAAK,CACJC,IAAKH,EAAWtL,IAAI,OACpB0L,IAAKH,EACLI,KAAMT,EACNU,SAAUN,EAAWvJ,MAAM,CAAC,OAAQ,WAAY,YAAa,GAC7D8J,OAAQP,EAAWtL,IAAI,gBAAkBlB,EAAOiD,MAAM,CAAC,UAAW,kBAClE+J,gBAAiBR,EAAWvJ,MAAM,CAAC,OAAQ,SAAU,eACrDgK,gBAAiBT,EAAWvJ,MAAM,CAAC,OAAQ,SAAU,eACrDiK,YAAaV,EAAWvJ,MAAM,CAAC,OAAQ,SAAU,WACjDkK,UAAWnN,EAAOkB,IAAI,aACtBkM,QAASvN,KAAKC,MAAMuN,UACpBC,SAAUd,EAAWtL,IAAI,YACzB2H,OAAQ,IACR0E,mBAAoB1N,KAAKC,MAAM0N,2BAGnCrB,EAAW9I,KAAK,QAClB,MAAO,GAAuD,UAAnDrD,EAAOiD,MAAM,CAAC,oBAAqB,EAAG,SAAsB,CACrE,MAAMuJ,EAAaxM,EAAOiD,MAAM,CAAC,oBAAqB,IAChDwJ,EAAcD,EAAWvJ,MAAM,CAAC,cAAe,iBAAmBuJ,EAAWtL,IAAI,eAEvFgL,EAAM7I,KACJgB,YAACoJ,WAAK,CACJC,QAASlB,EAAWtL,IAAI,eACxByM,UAAWnB,EAAWvJ,MAAM,CAAC,OAAQ,WAAY,eACjDqK,SAAUd,EAAWtL,IAAI,YACzByL,IAAKH,EAAWtL,IAAI,OACpB0L,IAAKH,EACLI,KAAMT,EACNwB,QAAM,EACNT,UAAWnN,EAAOkB,IAAI,aACtB2M,UAAWrC,EAASvI,MAAM,CAAC,QAAS,cACpC6K,UAAWtC,EAASvI,MAAM,CAAC,QAAS,cACpC8K,iBAAkBzC,EAClB7B,YAAa5J,KAAK0J,gBAClByE,UAAQ,EACRZ,QAASvN,KAAKC,MAAMuN,UACpBE,mBAAoB1N,KAAKC,MAAM0N,2BAGnCrB,EAAW9I,KAAK,eAClB,MACE6I,EAAM7I,KACJgB,YAAC4J,WAAY,CACXC,YAAU,EACVf,UAAWnN,EAAOkB,IAAI,aACtBgL,MAAOlM,EAAOkB,IAAI,qBAClB2L,KAAMT,EACNyB,UAAWrC,EAASvI,MAAM,CAAC,QAAS,cACpC6K,UAAWtC,EAASvI,MAAM,CAAC,QAAS,cACpCkL,QAAS7C,EACT8C,YAAavO,KAAKC,MAAMsO,YACxBhB,QAASvN,KAAKC,MAAMuN,UACpBE,mBAAoB1N,KAAKC,MAAM0N,2BAGnCrB,EAAW9I,KAAK,kBAETrD,EAAOkB,IAAI,UACpBgL,EAAM7I,KAAKgB,YAACgK,KAAI,CAAClB,UAAWnN,EAAOkB,IAAI,aAAckN,YAAavO,KAAKC,MAAMsO,YAAaE,KAAMtO,EAAOkB,IAAI,WAC3GiL,EAAW9I,KAAK,SAGdrD,EAAOkB,IAAI,UACb4K,EAAazI,KAAKgB,YAACkK,KAAa,CAACC,OAAQxO,EAAOkB,IAAI,QAAS2L,KAAM7M,EAAOkB,IAAI,eAC9E6K,EAAkB1I,KAAK,UAGrBrD,EAAOkB,IAAI,iBACbuK,EAAkBgD,gBAAAC,YAAA,CAAAC,SAAA,CAAE,MAAGtK,YAAA,KAAGC,UAAU,+BAA+Bd,KAAMxD,EAAOiD,MAAM,CAAC,cAAe,YAAa+G,OAAO,SAAS4E,IAAI,4BAAqB,EAAE5O,EAAOiD,MAAM,CAAC,cAAe,cAG7L,MAAM4L,EAAiBJ,gBAAAC,YAAA,CAAAC,SAAA,CAAE,MAAGtK,YAACyK,KAAc,CAACC,WAAY/O,EAAOkB,IAAI,mBAiEnE,MA/DiC,WAA7BlB,EAAOkB,IAAI,cACbyK,EAAa,WACyB,YAA7B3L,EAAOkB,IAAI,gBACpByK,EAAa,QAMbD,EAHG,CAAC,WAAY,UAAU7I,SAAS7C,EAAOkB,IAAI,eAErCrB,KAAKa,QAAQC,OAEpB8N,gBAAAC,YAAA,CAAAC,SAAA,CACG,MACDtK,YAAC2K,IAAI,CAACC,GAAK,KAAIjP,EAAOiD,MAAM,CAAC,UAAW,YAAYjD,EAAOkB,IAAI,gBAAiBoD,UAAU,8BAAuB,EAC/GD,YAACkE,IAAI,CAAC3K,GAAI+N,IACVtH,YAAA,QAAMC,UAAU,iCAA0B,EACxCD,YAAC6K,IAAc,CAACC,MAAOnP,EAAOkB,IAAI,wBAOxCuN,gBAAAC,YAAA,CAAAC,SAAA,CACG,MACDtK,YAAA,KAAGb,KAAO,aAAYxD,EAAOkB,IAAI,oBAAqBoD,UAAU,wBAAwBI,QAAS7E,KAAKkK,sBAAgB,EACpH1F,YAACkE,IAAI,CAAC3K,GAAI+N,IACVtH,YAAA,QAAMC,UAAU,iCAA0B,EACxCD,YAAC6K,IAAc,CAACC,MAAOnP,EAAOkB,IAAI,wBApB7B,KA4Bb0K,EADE/L,KAAKa,QAAQC,OAEb0D,YAAC2K,IAAI,CAACC,GAAK,KAAIjP,EAAOiD,MAAM,CAAC,UAAW,YAAYjD,EAAOkB,IAAI,mBAAoBoD,UAAU,8BAAuB,EAClHD,YAACkE,IAAI,CAAC3K,GAAG,SACTyG,YAAA,QAAMC,UAAU,mCAA4B,EAC1CD,YAAC6K,IAAc,CAACC,MAAOnP,EAAOkB,IAAI,wBAMtCmD,YAAA,KAAGb,KAAO,aAAYxD,EAAOkB,IAAI,uBAAwBoD,UAAU,wBAAwBI,QAAS7E,KAAKkK,sBAAgB,EACvH1F,YAACkE,IAAI,CAAC3K,GAAG,SACTyG,YAAA,QAAMC,UAAU,mCAA4B,EAC1CD,YAAC6K,IAAc,CAACC,MAAOnP,EAAOkB,IAAI,wBAMtClB,EAAOkB,IAAI,eACb2K,EACE4C,gBAAAC,YAAA,CAAAC,SAAA,CACG,MACDtK,YAACuC,GAAe,CAACjB,SAAU3F,EAAOkB,IAAI,MAAOuG,UAAWzH,EAAOkB,IAAI,mBAMvEmD,YAAA,OAAK+K,MAAOlE,QAAW,EACrBuD,gBAAA,OAAKY,IAAKxP,KAAK6J,OAAQpF,UAAWK,IAAW,kBAAoB,mBAAkB3E,EAAOkB,IAAI,gBAAiB,CAAEkK,YAAY,iBAAgBpL,EAAOiD,MAAM,CAAC,UAAW,SAAS0L,SAAA,CAC7KtK,YAAA,KAAGb,KAAMxD,EAAOiD,MAAM,CAAC,UAAW,QAASyB,QAAS7E,KAAKiJ,mBAAoBxE,UAAU,sCAA+B,EACpHD,YAAA,OAAKC,UAAU,wCAAiC,EAACD,YAACiL,IAAM,CAACC,QAASvP,EAAOkB,IAAI,WAAY8D,KAAM,MAC/FX,YAACmL,IAAW,CAACD,QAASvP,EAAOkB,IAAI,WAAYuO,YAAa5P,KAAKC,MAAMmE,UAGvEI,YAACqL,KAAa,CACZ1P,OAAQA,EACRkM,MAAOJ,EACPE,WAAYA,EACZG,WAAYJ,EACZT,SAAUA,EACVqE,WAAW,EACXC,iBAAkBrE,EAClBjB,YAAazK,KAAKwK,gBAClBhB,WAAYxJ,KAAKwJ,WACjBwG,SAAUhQ,KAAKiK,kBACfgG,SAAUtE,EAAStK,IAAI,wBACvB6O,gBAAiBvE,EAAStK,IAAI,oBAC9B0D,UAAQ,IAGVP,YAAA,OAAKC,UAAU,8BAAuB,EACpCD,YAAA,KAAGC,UAAU,4BAA4Bd,KAAMxD,EAAOkB,IAAI,OAAQ8I,OAAO,SAAS4E,IAAI,4BAAqB,EACzGvK,YAAC2L,IAAa,CAACb,MAAO,IAAIc,KAAKjQ,EAAOkB,IAAI,eAAgBgH,UAAU,MAAMgI,KAAK,UAAU/H,MAAM,QAAQC,IAAI,UAAUC,KAAK,UAAUC,OAAO,aACxIuD,EAAQgD,EAAgBpD,EAAiBC,EAAW,MAAIE,MAKvE,EAvTIjD,GAEGxD,aAAe,CACpBxE,OAAQyE,IAAUC,QAHhBsD,GAMGwH,UAAY,CACjBnQ,OAAQoQ,IAAmBC,IAC3B7E,SAAU4E,IAAmBC,IAAIC,WACjClC,YAAahJ,IAAUmL,KAAKD,WAC5B7G,YAAarE,IAAUmL,KAAKD,WAC5B/E,eAAgBnG,IAAUmL,KAC1BjG,YAAalF,IAAUmL,KAAKD,WAC5BhF,SAAUlG,IAAUoL,KACpBhG,cAAepF,IAAUoL,KACzB1F,eAAgB1F,IAAUmL,KAC1BtM,OAAQmB,IAAUqL,OAAOH,WACzBlF,QAAShG,IAAUoL,KACnBnD,UAAWjI,IAAUoL,KACrBnF,iBAAkB+E,IAAmBM,SAAS,CAC5CC,MAAOvL,IAAUoL,KACjBI,UAAWxL,IAAUoL,OAEvBhD,wBAAyBpI,IAAUmL,KACnC/N,KAAM4C,IAAUC,OAAOiL,YAmSZhL,mBAAWqD,IC1R1B,MAAMlL,GAAWC,YAAe,CAC9BmT,cAAe,CAAEjT,GAAG,+BAAiCC,eAAe,UACpEiT,cAAe,CAAElT,GAAG,+BAAiCC,eAAe,gDACpEkT,eAAgB,CAAEnT,GAAG,gCAAkCC,eAAe,oBACtEmT,eAAgB,CAAEpT,GAAG,gCAAkCC,eAAe,sJACtEoT,UAAW,CAAErT,GAAG,uBAAyBC,eAAe,qBACxDqT,QAAS,CAAEtT,GAAG,uBAAyBC,eAAe,qBACtDsT,2BAA4B,CAAEvT,GAAG,gCAAkCC,eAAe,sFAClFuT,eAAgB,CAAExT,GAAG,yBAA2BC,eAAe,8BAC/DwT,aAAc,CAAEzT,GAAG,8BAAgCC,eAAe,SAClEyT,aAAc,CAAE1T,GAAG,8BAAgCC,eAAe,0GAClE0T,YAAa,CAAE3T,GAAG,6BAA+BC,eAAe,uBAgG5D2T,GAAkBA,CAAChP,EAAMxC,KAC7B,MAAMyR,EAAczR,EAAOiD,MAAM,CAAC,UAAW,iBACvCyO,EAAW1R,EAAOiD,MAAM,CAAC,UAAW,aACpC0O,EAAqC,IAA9BF,EAAYG,OAAOC,OAAeH,EAAWD,EACpDnO,EAAOtD,EAAOkB,IAAI,gBAClB4Q,EAAkB9R,EAAOkB,IAAI,qBAAqB8D,KAExD,OAAO1B,EAAQ,GAAEqO,OAhBFI,EAACC,EAAKC,KACrB,MAAMC,EAAMC,MAAMC,KAAKJ,GACvB,OAAIE,EAAIL,OAASI,EACRC,EAAIG,MAAM,EAAGJ,GAAKK,KAAK,IAAM,IAE7BN,CACT,EAU2BD,CAASzO,EAAM,OAASd,EAAKe,cAAc9F,GAAS0T,2BAA4B,CAAEQ,OAAMG,mBAAkB,EAGvI,MAAMS,WAAe3J,IAAuBlJ,cAAA,IAAA8S,EAAA,SAAA7S,WAAA6S,EAAA3S,KAAA,KAyB1C4F,MAAQ,CACNgN,YAAY,EACZC,gBAAY1O,EACZ2O,oBAAgB3O,EAChB2B,cAAU3B,EACV4O,oBAAgB5O,EAChBqJ,eAAWrJ,EACX6O,oBAAgB7O,GAChB,KAoCF8O,mBAAqB,KACnB,MAAM,OAAE9S,GAAWH,KAAKC,MAEpBD,KAAKC,MAAM0L,SAASvI,MAAM,CAAC,mBAAoB,iBAC7CjD,EAAOkB,IAAI,UACbrB,KAAKC,MAAMqG,SAAS4M,YAAa/S,EAAOkB,IAAI,QAE5CrB,KAAKC,MAAMqG,SAAS6M,YAAWhT,EAAOkB,IAAI,QAEnCrB,KAAKC,MAAME,OAAOkB,IAAI,iBAC/BrB,KAAKoT,cAAcpT,KAAK4F,MAAMiN,WAChC,EACA,KAEFQ,4BAA8B,KAC5BrT,KAAK6K,SAAS,CAAE2C,WAAYxN,KAAK4F,MAAM4H,WAAY,EACnD,KAEF8F,qBAAwBnT,IACtBH,KAAKC,MAAMqG,SAAS5H,YAAUyB,GAAQ,EACtC,KAEFI,qBAAuB,CAACJ,EAAQE,KAC9B,MAAM,SAAEiG,GAAatG,KAAKC,OACpB,SAAE2C,GAAa5C,KAAKa,QAAQiC,SAE9BF,EACEzC,EAAOkB,IAAI,cACbiF,EAASiN,YAAYpT,IAEhBE,GAAKA,EAAEmT,WAAcC,IACxBzT,KAAKsT,qBAAqBnT,GAE1BmG,EAASqC,YAAU,CACjBC,UAAW,YACXC,WAAY,CACV1I,SACAK,YAAaR,KAAKsT,yBAM1BhN,EAASqC,YAAU,CACjBC,UAAW,cACXC,WAAY,CACV6K,KAAM,YACN1L,UAAW7H,EAAOiD,MAAM,CAAC,UAAW,OACpChB,IAAKjC,EAAOkB,IAAI,UAGtB,EACA,KAEFsS,UAAaxT,IACPA,EAAOkB,IAAI,UACbrB,KAAKC,MAAMqG,SAASlH,YAAMe,IAE1BH,KAAKC,MAAMqG,SAASnH,YAAIgB,GAC1B,EACA,KAEFJ,iBAAoBI,IAClB,MAAM,qBAAEyT,EAAoB,SAAEtN,EAAQ,KAAE3D,GAAS3C,KAAKC,OAChD,SAAE2C,GAAa5C,KAAKa,QAAQiC,SAI9BwD,EAFA1D,EACEgR,EACOjL,YAAU,CACjBC,UAAW,UACXC,WAAY,CACVgL,QAASlR,EAAKe,cAAc9F,GAAS6T,cACrCqC,QAASnR,EAAKe,cAAc9F,GAAS4T,cACrCuC,WAAYA,IAAMzN,EAAS0N,YAAmB,CAAC,kCAAkC,IACjFC,UAAWA,IAAM3N,EAAS4N,aAAa/T,EAAQH,KAAKa,QAAQC,OAAOC,aAI9DmT,aAAa/T,EAAQH,KAAKa,QAAQC,OAAOC,SAG3C4H,YAAU,CACjBC,UAAW,cACXC,WAAY,CACV6K,KAAM,QACN1L,UAAW7H,EAAOiD,MAAM,CAAC,UAAW,OACpChB,IAAKjC,EAAOkB,IAAI,UAGtB,EACA,KAEF8S,kBAAoB,CAAChU,EAAQiU,KAC3B,MAAM,SAAE9N,GAAatG,KAAKC,MAEtBE,EAAOkB,IAAI,aACbiF,EAAS+N,YAASlU,IAElBmG,EAAShI,YAAO6B,EAAQiU,GAC1B,EACA,KAEFhU,kBAAoB,CAACD,EAAQE,KAC3B,MAAM,SAAEsL,EAAQ,SAAErF,GAAatG,KAAKC,OAC9B,SAAE2C,GAAa5C,KAAKa,QAAQiC,SAE9BF,EACE+I,EAAStK,IAAI,4CAA8ClB,EAAOkB,IAAI,qBAAqBoL,MAAKxF,IAASA,EAAK5F,IAAI,mBAAoBlB,EAAOkB,IAAI,aACnJiF,EAASgO,YAAe,CAAEnU,SAAQG,SAAUN,KAAKmU,kBAAmBI,yBAAyB,KACnFlU,GAAKA,EAAEmT,WAAcgB,IAC/BxU,KAAKmU,kBAAkBhU,GAEvBmG,EAASgO,YAAe,CAAEnU,SAAQG,SAAUN,KAAKmU,qBAGnD7N,EAASqC,YAAU,CACjBC,UAAW,cACXC,WAAY,CACV6K,KAAM,SACN1L,UAAW7H,EAAOiD,MAAM,CAAC,UAAW,OACpChB,IAAKjC,EAAOkB,IAAI,UAGtB,EACA,KAEFZ,oBAAuBN,IACjBA,EAAOkB,IAAI,cACbrB,KAAKC,MAAMqG,SAASmO,YAAWtU,IAE/BH,KAAKC,MAAMqG,SAAS3H,YAASwB,GAC/B,EACA,KAEFQ,kBAAoB,SAACR,EAAQY,EAAS2T,QAAW,IAAXA,OAAc,GAClD,MAAM,SAAEpO,EAAQ,KAAE3D,GAASgQ,EAAK1S,MAE3B0U,IAGHrO,EAASqC,YAAU,CACjBC,UAAW,UACXC,WAAY,CACVgL,QAASlR,EAAKe,cAAcgR,EAAc9W,GAASuT,eAAiBvT,GAASqT,eAC7E6C,QAASnR,EAAKe,cAAcgR,EAAc9W,GAASsT,eAAiBtT,GAASoT,eAC7EiD,UAAWA,IAAM3N,EAASsO,YAAazU,EAAOkB,IAAI,MAAON,EAAS2T,QAPtEpO,EAASsO,YAAazU,EAAOkB,IAAI,MAAON,EAAS2T,GAWrD,EAAE,KAEFzT,gBAAkB,CAACd,EAAQY,KACzBf,KAAKC,MAAMqG,SAASuO,YAAW1U,EAAOkB,IAAI,MAAON,GAAS,EAC1D,KAEFI,kBAAoB,CAACuO,EAAS5O,KAC5Bd,KAAKC,MAAMqG,SAASwO,aAAcpF,EAAS5O,GAAQ,EACnD,KAEFQ,mBAAqB,CAACoO,EAAS5O,KAC7Bd,KAAKC,MAAMqG,SAASyO,aAAerF,EAAS5O,GAAQ,EACpD,KAEFkU,gBAAkB,CAAC3I,EAAO7E,EAAOwF,KAC/BhN,KAAKC,MAAMqG,SAASqC,YAAU,CAC5BC,UAAW,QACXC,WAAY,CAAE/C,SAAU9F,KAAKC,MAAME,OAAOkB,IAAI,MAAOgL,QAAO7E,QAAOwF,UAClE,EACH,KAEFtD,gBAAkB,CAAC2C,EAAOW,EAAMrD,KAC9B3J,KAAKC,MAAMqG,SAASqC,YAAU,CAC5BC,UAAW,QACXC,WAAY,CAAE/C,SAAU9F,KAAKC,MAAME,OAAOkB,IAAI,MAAOgL,QAAOW,OAAMrD,aACjE,EACH,KAEFsL,sBAAwB5U,IACtB,MAAM,OAAEF,GAAWH,KAAKC,MAExBI,EAAEiJ,iBAEEnJ,EAAOkB,IAAI,qBAAqB8D,KAAO,IACc,UAAnDhF,EAAOiD,MAAM,CAAC,oBAAqB,EAAG,SACxCpD,KAAK0J,gBAAgBvJ,EAAOiD,MAAM,CAAC,oBAAqB,IAAK,CAAE8R,UAAW,IAE1ElV,KAAKgV,gBAAgB7U,EAAOkB,IAAI,qBAAsB,GAE1D,EACA,KAEFG,gBAAmBkO,IACjB1P,KAAKC,MAAMqG,SAAS6O,YAAczF,GAAS,EAC3C,KAEFhO,4BAA+BvB,IACzBA,EAAOkB,IAAI,SACbrB,KAAKC,MAAMqG,SAAS8O,YAAajV,EAAOkB,IAAI,QAE5CrB,KAAKC,MAAMqG,SAAS+O,YAAWlV,EAAOkB,IAAI,OAC5C,EACA,KAEFiU,gBAAkB,KAChB,MAAM,OAAEnV,EAAM,aAAEoV,EAAY,eAAEC,EAAc,SAAE7J,GAAa3L,KAAKC,MAC1DwV,EAAY,CAACtV,EAAOkB,IAAI,OAAOqU,OAAOH,EAAaI,OAAQH,EAAeG,QAChF,IAAI,WAAE9C,GAAe7S,KAAK4F,MAEtB+F,EAASvI,MAAM,CAAC,mBAAoB,mBACtCyP,GAAc1S,EAAOkB,IAAI,WAEtBwR,EAGH7S,KAAKC,MAAMqG,SAAS6M,YAAWsC,IAF/BzV,KAAKC,MAAMqG,SAAS4M,YAAauC,IAKnCzV,KAAK6K,SAAS,CAAEgI,YAAaA,EAAYC,gBAAiBD,GAAa,EACvE,KAEFrI,gBAAkBrK,IAChB,MAAM,SAAEmG,GAAatG,KAAKC,MAEtBE,EAAOkB,IAAI,eACbiF,EAASsP,YAAsBzV,EAAOkB,IAAI,MAAOlB,EAAOkB,IAAI,UAE5DiF,EAASuP,YAAgB1V,EAAOkB,IAAI,OACtC,EACA,KAEFO,iBAAoBzB,IAClB,MAAM,SAAEmG,GAAatG,KAAKC,MACpByP,EAAUvP,EAAOkB,IAAI,WAC3BiF,EAASwP,YAAepG,GAAS,EACjC,KAEF5N,aAAgB3B,IACdH,KAAKC,MAAMqG,SAASyP,YAAW5V,EAAOkB,IAAI,WAAYlB,GAAQ,EAC9D,KAEFkC,YAAelC,IACbH,KAAKC,MAAMqG,SAASqC,YAAU,CAC5BC,UAAW,QACXC,WAAY,CAAE9K,GAAIoC,EAAOkB,IAAI,SAC5B,EACH,KAEF2U,4BAA8B,KAC5BhW,KAAKqT,6BAA6B,EAClC,KAEF4C,mBAAqB,KACnBjW,KAAKkW,aAAalW,KAAKC,MAAME,OAAOkB,IAAI,MAAM,EAC9C,KAEF8U,qBAAuB,KACrBnW,KAAKoW,eAAepW,KAAKC,MAAME,OAAOkB,IAAI,MAAM,EAChD,KAEFgV,kBAAoBhW,IAClBA,EAAEiJ,iBACFtJ,KAAKD,iBAAiBC,KAAKC,MAAME,OAAO,EACxC,KAEFmW,sBAAwB,KACtBtW,KAAKO,qBAAqBP,KAAKC,MAAME,OAAO,EAC5C,KAEFoW,kBAAoB,KAClBvW,KAAKI,kBAAkBJ,KAAKC,MAAME,OAAO,EACzC,KAEFqW,qBAAuB,KACrBxW,KAAKS,oBAAoBT,KAAKC,MAAME,OAAO,EAC3C,KAEFsW,oBAAsBpW,IACpBA,EAAEiJ,iBACFtJ,KAAKsB,mBAAmBtB,KAAKC,MAAME,OAAO,EAC1C,KAEFuW,wBAA0B,KACxB1W,KAAKa,QAAQC,OAAOC,QAAQyC,KAAM,KAAIxD,KAAKC,MAAME,OAAOiD,MAAM,CAAC,UAAW,WAAW,EACrF,KAEF8S,aAAenY,IACb,MAAM,OAAEoC,EAAM,aAAEoV,EAAY,eAAEC,GAAmBxV,KAAKC,MAEtD,GAAIlC,IAAOoC,EAAOkB,IAAI,MACpBrB,KAAK2W,aAAapB,EAAapQ,KAAO,GAAG,OACpC,CACL,IAAIqC,EAAQ+N,EAAaqB,QAAQ7Y,IAElB,IAAXyJ,GACFA,EAAQgO,EAAeoB,QAAQ7Y,GAC/BiC,KAAK2W,aAAapB,EAAapQ,KAAOqC,GAAO,IAE7CxH,KAAK2W,aAAanP,EAAQ,GAAG,EAEjC,GACA,KAEF4O,eAAiBrY,IACf,MAAM,OAAEoC,EAAM,aAAEoV,EAAY,eAAEC,GAAmBxV,KAAKC,MAEtD,GAAIlC,IAAOoC,EAAOkB,IAAI,MACpBrB,KAAK2W,aAAapB,EAAapQ,KAAO,GAAG,OACpC,CACL,IAAIqC,EAAQ+N,EAAaqB,QAAQ7Y,IAElB,IAAXyJ,GACFA,EAAQgO,EAAeoB,QAAQ7Y,GAC/BiC,KAAK2W,aAAapB,EAAapQ,KAAOqC,EAAQ,GAAG,IAEjDxH,KAAK2W,aAAanP,EAAQ,GAAG,EAEjC,GACA,KAgBFqP,kBAAoB,KAClB7W,KAAK8W,OAAOC,WAAW,EACvB,KAoBF3D,aAAe9D,IACbtP,KAAK6K,SAAS,CAAEgI,WAAYvD,GAAQ,EACpC,KAEFzF,OAASC,IACP9J,KAAK+J,KAAOD,CAAC,EACb,KAEFkN,aAAelN,IACb9J,KAAK8W,OAAShN,CAAC,EACf,KAkCFmN,mBAAqB,KACnBjX,KAAK6K,SAAS,CAAE+H,WAAYsE,eAAiB,EAC7C,KAEFC,mBAAqB,CAACC,EAAeC,KAAoB,IAADC,EAAAC,EAAAC,EAAA,IAAjB,SAAEC,GAAUJ,EAEjD,IAAkB,OAAdC,EAAAG,EAAS7R,YAAK,EAAd0R,EAAgBI,qBAAoC,MAAfN,GAAyB,OAAVG,EAAfH,EAAiBK,WAAe,OAAPF,EAAzBA,EAA2B3R,YAAK,EAAhC2R,EAAkCG,kBACzE,OAAO,EAIT,MAAMC,EAAiB,OAAZH,EAAGxX,KAAK+J,WAAI,EAATyN,EAAWI,cAAc,6BACvC,QAAID,GACK,CAAC,EAAGA,EAAME,UAIP,CACZ,CAncFC,oBACEC,YAAyB/X,KAAKiX,oBAC9BjX,KAAKC,MAAMqG,SAAS0R,YAAYhY,KAAKC,MAAMgY,OAAOnS,WAClD9F,KAAKkY,uBACP,CAEA,+BAAOC,CAAyBlY,EAAO2F,GACrC,IAAIwS,EAAS,CAAC,EACVC,GAAU,EAEVpY,EAAMgY,OAAOnS,UAAYF,EAAME,WAAa7F,EAAMgY,OAAOnS,WAC3D7F,EAAMqG,SAAS0R,YAAY/X,EAAMgY,OAAOnS,WACxCsS,EAAOtF,oBAAiB3O,EACxBiU,EAAOtS,SAAW7F,EAAMgY,OAAOnS,SAC/BuS,GAAU,GAGZ,MAAMrF,EAAiB/S,EAAM0L,SAASvI,MAAM,CAAC,QAAS,qBActD,OAbI4P,IAAmBpN,EAAMoN,iBAC3BoF,EAAOpF,eAAiBA,EACpBA,IAAgBoF,EAAO5K,UAAY8K,YAAuBrY,EAAME,OAAQF,EAAM0L,WAClF0M,GAAU,GAGRpY,EAAME,QAAUyF,EAAMmN,iBAAmB9S,EAAME,OAAOkB,IAAI,QAC5D+W,EAAO5K,UAAY8K,YAAuBrY,EAAME,OAAQF,EAAM0L,UAC9DyM,EAAOrF,eAAiB9S,EAAME,OAAOkB,IAAI,MACzC+W,EAAOvF,WAAa0F,YAAatY,EAAM0L,SAAU1L,EAAME,QACvDkY,GAAU,GAGLA,EAAUD,EAAS,IAC5B,CAiUAzB,aAAcnP,EAAOgR,GACnB,MAAMC,EAAYzY,KAAK+J,KACjB2O,EAAUD,EAAUE,iBAAiB,cAAcnR,GAErDkR,IACEF,GAAaC,EAAU1B,UAAY2B,EAAQb,UAC7Ca,EAAQE,gBAAe,IACbJ,GAAaC,EAAU1B,UAAY0B,EAAUI,aAAeH,EAAQb,UAAYa,EAAQI,cAClGJ,EAAQE,gBAAe,GAEzBF,EAAQK,QAEZ,CAMAC,eAAgBC,EAAMC,GACpB,MAAQjB,QAAQ,SAAEnS,IAAe9F,KAAKC,MAEtC,OAAOgZ,EAAKzI,KAAI,CAACzS,EAAImJ,IACnB1C,YAAC2U,IAAe,CAEdpb,GAAIA,EACJ0N,SAAUzL,KAAK4F,MAAMkN,eACrBsG,SAAUpZ,KAAKkW,aACfmD,WAAYrZ,KAAKoW,eACjBkD,YAAY,SACZC,WAAYrS,EAAI,EAAI+R,EAAK5X,IAAI6F,EAAI,QAAK/C,EACtCqV,OAAQP,EAAK5X,IAAI6F,EAAI,IAAOgS,GAAapT,EACzC2T,OAAQ3T,GARH/H,IAWX,CAcAma,wBACE,MAAM,OAAE/X,EAAM,YAAEuZ,GAAgB1Z,KAAKC,MAEjCE,GACFmK,OAAOqP,uBAAsB,KAAO,IAADC,EAKjC,GAJS,OAATA,EAAA5Z,KAAK+J,OAAgD,OAA5C6P,EAATA,EAAWhC,cAAc,+BAAzBgC,EAAuDhB,gBAAe,IAIjEc,EAAa,CAAC,IAADG,EAChB,MAAMC,EAA0D,OAApDD,EAAGE,SAASnC,cAAc,6BAAmD,OAAzBiC,EAAjDA,EAAmDG,8BAAuB,EAA1EH,EAA4EI,OAC3F,GAAIH,EAAQ,EACeC,SAASG,kBAAoBH,SAASI,MAC9CC,SAAS,GAAIN,EAChC,CACF,IAGN,CAEA5O,mBAAoBC,GAAY,IAADkP,EAC7B,MAAM,OAAEla,EAAM,aAAEoV,GAAiBvV,KAAKC,MAElCE,IAAWoV,EAAapQ,KAAOgG,EAAUoK,aAAapQ,OAAwB,OAAhBkV,EAAAlP,EAAUhL,aAAM,EAAhBka,EAAkBhZ,IAAI,SAAUlB,EAAOkB,IAAI,QAC3GrB,KAAKkY,uBAET,CAEAoC,uBACEC,YAAyBva,KAAKiX,mBAChC,CAsBAvU,SACE,IAAIwW,EAAWsB,EACf,MAAM,UAAEC,EAAS,OAAEta,EAAM,SAAEwL,EAAQ,aAAE4J,EAAY,eAAEC,EAAc,KAAE7S,EAAI,OAAEyB,EAAM,YAAEsV,EAAW,iBAAElO,GAAqBxL,KAAKC,OAClH,WAAE2S,GAAe5S,KAAK4F,MAE5B,GAAI6U,EACF,OACEjW,YAACkW,IAAM,UACLlW,YAACmW,IAAgB,KAKvB,GAAe,OAAXxa,EACF,OACEqE,YAACoW,IAAiB,CAAClB,YAAaA,EAAamB,UAAU,YAI3D,MAAMhI,EAAalH,EAASvI,MAAM,CAAC,mBAAoB,kBAAoBjD,EAAOkB,IAAI,UAAYrB,KAAK4F,MAAMiN,WAEzG0C,GAAgBA,EAAapQ,KAAO,IACtC+T,EAAY4B,eAAAjM,YAAA,CAAAC,SAAG9O,KAAKgZ,eAAezD,GAAc,MAG/CC,GAAkBA,EAAerQ,KAAO,IAC1CqV,EAAcM,eAAAjM,YAAA,CAAAC,SAAG9O,KAAKgZ,eAAexD,MAGvC,MAAMuF,GAAkE,IAAxD5a,EAAOiD,MAAM,CAAC,UAAW,QAAS,IAAIwT,QAAQ,KACxDoE,GAAe7a,EAAOiD,MAAM,CAAC,UAAW,YAExC6X,EAAW,CACfC,OAAQlb,KAAKiW,mBACbkF,SAAUnb,KAAKmW,qBACf9X,MAAO2B,KAAKqW,kBACZ3X,UAAWsB,KAAKsW,sBAChB8E,MAAOpb,KAAKuW,kBACZ5X,SAAUqB,KAAKwW,qBACfpY,QAAS4B,KAAKyW,oBACd4E,YAAarb,KAAK0W,wBAClB4E,cAAetb,KAAKiT,mBACpBsI,gBAAiBvb,KAAKgW,4BACtBwF,UAAWxb,KAAKiV,uBAGlB,OACErG,gBAAC8L,IAAM,CAACe,gBAAiB/B,EAAalK,IAAKxP,KAAKgX,aAAc/O,MAAOtF,EAAKe,cAAc9F,GAAS2T,gBAAgBzC,SAAA,CAC/GtK,YAACkX,IAAY,CACX9W,KAAK,UACLD,MAAOhC,EAAKe,cAAc9F,GAAS8T,aACnC7M,QAAS7E,KAAK6W,kBACd8E,gBAAc,EACdjC,YAAaA,EACbkC,YACEpX,YAAA,UAAQkP,KAAK,SAASjP,UAAU,wBAAwBE,MAAOhC,EAAKe,cAAemP,EAAkCjV,GAASyT,QAA9BzT,GAASwT,WAA+B,aAAYzO,EAAKe,cAAemP,EAAkCjV,GAASyT,QAA9BzT,GAASwT,WAA+BvM,QAAS7E,KAAKsV,sBAAgB,EAAC9Q,YAACkE,IAAI,CAAC3K,GAAK8U,EAA2B,MAAd,iBAIxRrO,YAACqX,IAAe,CAACC,UAAU,SAAS3E,mBAAoBnX,KAAKmX,yBAAmB,EAC9EvI,gBAAA,OAAKnK,UAAWK,IAAW,aAAc,CAAE8N,eAAepD,IAAKxP,KAAK6J,OAAOiF,SAAA,CACxEoK,EAED1U,YAACuX,UAAO,CAACd,SAAUA,QAAS,EAC1BzW,YAAA,OAAKC,UAAWK,IAAW,YAAa,2BAA6B,4BAA2B3E,EAAOkB,IAAI,iBAAkB2a,SAAU,EAAG,aAAYC,YAAoBtZ,EAAMxC,GAAQ,EAAO0S,SAAY,EACzMrO,YAACsE,GAAc,CAEb3I,OAAQA,EACRwL,SAAUA,EACV/B,YAAa5J,KAAK0J,gBAClB6E,YAAavO,KAAKgV,gBAClBvJ,SAAUoH,EACVnH,eAAgB1L,KAAKiT,mBACrBxI,YAAazK,KAAKwK,gBAClBpG,OAAQA,EACRoJ,UAAWxN,KAAK4F,MAAM4H,UACtBG,wBAAyB3N,KAAKqT,4BAC9B7H,iBAAkBA,GAXZ,WAAUrL,EAAOkB,IAAI,SAc7BmD,YAAC7E,EAAS,CAERQ,OAAQA,EACRD,QAASF,KAAKD,iBACdS,YAAaR,KAAKO,qBAClBD,SAAUN,KAAKI,kBACfM,WAAYV,KAAKS,oBACjBG,SAAUZ,KAAKW,kBACfO,OAAQlB,KAAKiB,gBACbG,SAAUpB,KAAKmB,kBACfI,UAAWvB,KAAKsB,mBAChBG,OAAQzB,KAAKwB,gBACbG,mBAAoB3B,KAAK0B,4BACzBG,QAAS7B,KAAK4B,iBACdG,SAAU/B,KAAK8B,aACfG,MAAOjC,KAAK2T,UACZrR,QAAStC,KAAKqC,aAfR,cAAalC,EAAOkB,IAAI,WAoBnCmZ,MAILhW,YAAC0X,IAAM,UACL1X,YAAA,kBAAQmN,GAAgBhP,EAAMxC,IAC9BqE,YAAA,QAAMV,KAAK,SAASqY,QAAUpB,GAAWC,EAAe,MAAQ,YAChExW,YAAA,QAAMuK,IAAI,YAAYpL,KAAMxD,EAAOkB,IAAI,YAI/C,EAxlBIqR,GAEGpN,aAAe,CACpBxE,OAAQyE,IAAUC,OAClB1C,SAAUyC,IAAUC,QAJlBkN,GAOGpC,UAAY,CACjB2H,OAAQ1S,IAAUC,OAAOiL,WACzBnK,SAAUf,IAAUmL,KAAKD,WACzBtQ,OAAQoQ,IAAmBC,IAC3BiK,UAAWlV,IAAUoL,KACrBhF,SAAU4E,IAAmBC,IAAIC,WACjC8E,aAAchF,IAAmB0I,KAAKxI,WACtC+E,eAAgBjF,IAAmB0I,KAAKxI,WACxC9N,KAAM4C,IAAUC,OAAOiL,WACvBmD,qBAAsBrO,IAAUoL,KAChC+I,YAAanU,IAAUoL,KACvBvM,OAAQmB,IAAUqL,OAAOH,WACzBjF,iBAAkB+E,IAAmBM,SAAS,CAC5CC,MAAOvL,IAAUoL,KACjBI,UAAWxL,IAAUoL,QAukBZlL,sBAAWC,mBAnsBE0W,KAC1B,MAAMC,EAAYC,cACZC,EAAsBC,cAEtBC,EAAkBC,YAAe,CACrC,CAACC,EAAC9W,KAAA,IAAE,GAAE9H,GAAI8H,EAAA,OAAK9H,CAAE,EACjB6H,GAASA,EAAMxC,MAAM,CAAC,WAAY,iBACjC,CAAC0C,EAAU8W,KACZ,IAAIrH,EAAesH,UAAUC,OAU7B,OATAvH,EAAeA,EAAawH,eAAcC,IACxC,IAAIjf,EAAK+H,EAET,KAAO/H,IAAOif,EAAQha,SAASjF,IAC7Bif,EAAQC,QAAQlf,GAChBA,EAAK6e,EAAWvb,IAAItD,EACtB,IAGKwX,CAAY,IAGf2H,EAAoBR,YAAe,CACvC,CAACC,EAACpW,KAAA,IAAE,GAAExI,GAAIwI,EAAA,OAAKxI,CAAE,EACjB6H,GAASA,EAAMxC,MAAM,CAAC,WAAY,YAClCwC,GAASA,EAAMvE,IAAI,cAClB,CAACyE,EAAUqX,EAAgBC,KAC5B,IAAI5H,EAAiB,GACrB,MAAM6H,EAAM,CAACvX,GAEb,KAAOuX,EAAIrL,OAAS,GAAG,CACrB,IAAIjU,EAAYsf,EAAIC,MACpB,MAAMC,EAAUJ,EAAe9b,IAAItD,GAE/B+H,IAAa/H,GACfyX,EAAehS,KAAKzF,GAGlBwf,GACFA,EAAQC,UAAUC,SAAQpf,IACnBgf,EAAIra,SAAS3E,IAAWmX,EAAexS,SAAS3E,IAAUyH,IAAazH,GAAOgf,EAAI7Z,KAAKnF,EAAM,GAGxG,CAEA,IAAIqf,EAAWlI,EAAemI,WAAW5f,GAAOqf,EAAS/b,IAAItD,GAAIsD,IAAI,4BAA8B+b,EAAS/b,IAAItD,GAAIsD,IAAI,aAWxH,OAVkB,IAAdqc,GACFlI,EAAeiI,SAAQ,CAAC1f,EAAI6f,KACtBA,EAAMF,GAAYN,EAAS/b,IAAItD,GAAIsD,IAAI,4BAA8B+b,EAAS/b,IAAItD,GAAIsD,IAAI,aAC5FmU,EAAeqI,OAAOD,EAAK,GAC3BpI,EAAeqI,OAAOH,EAAU,EAAG3f,GACnC2f,GAAY,EACd,IAIGb,UAAUC,KAAKtH,EAAe,IA0BvC,MAvBwB7P,CAACC,EAAO3F,KAC9B,MAAME,EAASkc,EAAUzW,EAAO,CAAE7H,GAAIkC,EAAMgY,OAAOnS,WAEnD,IAAIyP,EAAiBsH,UAAUC,OAC3BtH,EAAiBqH,UAAUC,OAO/B,OALI3c,IACFoV,EAAiBkH,EAAgB7W,EAAO,CAAE7H,GAAIoC,EAAOkB,IAAI,oBACzDmU,EAAiB0H,EAAkBtX,EAAO,CAAE7H,GAAIoC,EAAOkB,IAAI,SAGtD,CACLoZ,UAAW7U,EAAMxC,MAAM,CAAC,WAAYnD,EAAMgY,OAAOnS,SAAU,cAC3D3F,SACAoV,eACAC,iBACA7J,SAAU/F,EAAMvE,IAAI,kBACpBuS,qBAAsBhO,EAAMxC,MAAM,CAAC,iBAAkB,mCAAwF,IAAnDwC,EAAMxC,MAAM,CAAC,UAAW,SAAS2O,OAAOC,OAClI5N,OAAQwB,EAAMxC,MAAM,CAAC,OAAQ,WAC7BoI,iBAAkB+Q,EAAoB3W,EAAO,CAAE7H,GAAIkC,EAAMgY,OAAOnS,WACjE,CAGmB,GAknBEJ,CAA6BgN,I","file":"js/flavours/glitch/async/status.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\n\nimport { IconButton } from 'flavours/glitch/components/icon_button';\nimport DropdownMenuContainer from 'flavours/glitch/containers/dropdown_menu_container';\nimport { me } from 'flavours/glitch/initial_state';\nimport { PERMISSION_MANAGE_USERS, PERMISSION_MANAGE_FEDERATION } from 'flavours/glitch/permissions';\nimport { accountAdminLink, statusAdminLink } from 'flavours/glitch/utils/backend_links';\n\nconst messages = defineMessages({\n  delete: { id: 'status.delete', defaultMessage: 'Delete' },\n  redraft: { id: 'status.redraft', defaultMessage: 'Delete & re-draft' },\n  edit: { id: 'status.edit', defaultMessage: 'Edit' },\n  direct: { id: 'status.direct', defaultMessage: 'Privately mention @{name}' },\n  mention: { id: 'status.mention', defaultMessage: 'Mention @{name}' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost with original visibility' },\n  cancel_reblog_private: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favorite' },\n  bookmark: { id: 'status.bookmark', defaultMessage: 'Bookmark' },\n  more: { id: 'status.more', defaultMessage: 'More' },\n  mute: { id: 'status.mute', defaultMessage: 'Mute @{name}' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n  block: { id: 'status.block', defaultMessage: 'Block @{name}' },\n  report: { id: 'status.report', defaultMessage: 'Report @{name}' },\n  share: { id: 'status.share', defaultMessage: 'Share' },\n  pin: { id: 'status.pin', defaultMessage: 'Pin on profile' },\n  unpin: { id: 'status.unpin', defaultMessage: 'Unpin from profile' },\n  embed: { id: 'status.embed', defaultMessage: 'Embed' },\n  admin_account: { id: 'status.admin_account', defaultMessage: 'Open moderation interface for @{name}' },\n  admin_status: { id: 'status.admin_status', defaultMessage: 'Open this post in the moderation interface' },\n  admin_domain: { id: 'status.admin_domain', defaultMessage: 'Open moderation interface for {domain}' },\n  copy: { id: 'status.copy', defaultMessage: 'Copy link to post' },\n  openOriginalPage: { id: 'account.open_original_page', defaultMessage: 'Open original page' },\n});\n\nclass ActionBar extends PureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    onReply: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onMute: PropTypes.func,\n    onMuteConversation: PropTypes.func,\n    onBlock: PropTypes.func,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onReport: PropTypes.func,\n    onPin: PropTypes.func,\n    onEmbed: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleReplyClick = () => {\n    this.props.onReply(this.props.status);\n  };\n\n  handleReblogClick = (e) => {\n    this.props.onReblog(this.props.status, e);\n  };\n\n  handleFavouriteClick = (e) => {\n    this.props.onFavourite(this.props.status, e);\n  };\n\n  handleBookmarkClick = (e) => {\n    this.props.onBookmark(this.props.status, e);\n  };\n\n  handleDeleteClick = () => {\n    this.props.onDelete(this.props.status, this.context.router.history);\n  };\n\n  handleRedraftClick = () => {\n    this.props.onDelete(this.props.status, this.context.router.history, true);\n  };\n\n  handleEditClick = () => {\n    this.props.onEdit(this.props.status, this.context.router.history);\n  };\n\n  handleDirectClick = () => {\n    this.props.onDirect(this.props.status.get('account'), this.context.router.history);\n  };\n\n  handleMentionClick = () => {\n    this.props.onMention(this.props.status.get('account'), this.context.router.history);\n  };\n\n  handleMuteClick = () => {\n    this.props.onMute(this.props.status.get('account'));\n  };\n\n  handleConversationMuteClick = () => {\n    this.props.onMuteConversation(this.props.status);\n  };\n\n  handleBlockClick = () => {\n    this.props.onBlock(this.props.status);\n  };\n\n  handleReport = () => {\n    this.props.onReport(this.props.status);\n  };\n\n  handlePinClick = () => {\n    this.props.onPin(this.props.status);\n  };\n\n  handleShare = () => {\n    navigator.share({\n      url: this.props.status.get('url'),\n    });\n  };\n\n  handleEmbed = () => {\n    this.props.onEmbed(this.props.status);\n  };\n\n  handleCopy = () => {\n    const url = this.props.status.get('url');\n    navigator.clipboard.writeText(url);\n  };\n\n  render () {\n    const { status, intl } = this.props;\n    const { signedIn, permissions } = this.context.identity;\n\n    const publicStatus       = ['public', 'unlisted'].includes(status.get('visibility'));\n    const pinnableStatus     = ['public', 'unlisted', 'private'].includes(status.get('visibility'));\n    const mutingConversation = status.get('muted');\n    const writtenByMe        = status.getIn(['account', 'id']) === me;\n    const isRemote           = status.getIn(['account', 'username']) !== status.getIn(['account', 'acct']);\n\n    let menu = [];\n\n    if (publicStatus && isRemote) {\n      menu.push({ text: intl.formatMessage(messages.openOriginalPage), href: status.get('url') });\n    }\n\n    menu.push({ text: intl.formatMessage(messages.copy), action: this.handleCopy });\n\n    if (publicStatus && 'share' in navigator) {\n      menu.push({ text: intl.formatMessage(messages.share), action: this.handleShare });\n    }\n\n    if (publicStatus && (signedIn || !isRemote)) {\n      menu.push({ text: intl.formatMessage(messages.embed), action: this.handleEmbed });\n    }\n\n    if (signedIn) {\n      menu.push(null);\n\n      if (writtenByMe) {\n        if (pinnableStatus) {\n          menu.push({ text: intl.formatMessage(status.get('pinned') ? messages.unpin : messages.pin), action: this.handlePinClick });\n          menu.push(null);\n        }\n\n        menu.push({ text: intl.formatMessage(mutingConversation ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMuteClick });\n        menu.push(null);\n        menu.push({ text: intl.formatMessage(messages.edit), action: this.handleEditClick });\n        menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDeleteClick, dangerous: true });\n        menu.push({ text: intl.formatMessage(messages.redraft), action: this.handleRedraftClick, dangerous: true });\n      } else {\n        menu.push({ text: intl.formatMessage(messages.mention, { name: status.getIn(['account', 'username']) }), action: this.handleMentionClick });\n        menu.push({ text: intl.formatMessage(messages.direct, { name: status.getIn(['account', 'username']) }), action: this.handleDirectClick });\n        menu.push(null);\n        menu.push({ text: intl.formatMessage(messages.mute, { name: status.getIn(['account', 'username']) }), action: this.handleMuteClick, dangerous: true });\n        menu.push({ text: intl.formatMessage(messages.block, { name: status.getIn(['account', 'username']) }), action: this.handleBlockClick, dangerous: true });\n        menu.push({ text: intl.formatMessage(messages.report, { name: status.getIn(['account', 'username']) }), action: this.handleReport, dangerous: true });\n        if (((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS && (accountAdminLink || statusAdminLink)) || (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION)) {\n          menu.push(null);\n          if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) {\n            if (accountAdminLink !== undefined) {\n              menu.push({ text: intl.formatMessage(messages.admin_account, { name: status.getIn(['account', 'username']) }), href: accountAdminLink(status.getIn(['account', 'id'])) });\n            }\n            if (statusAdminLink !== undefined) {\n              menu.push({ text: intl.formatMessage(messages.admin_status), href: statusAdminLink(status.getIn(['account', 'id']), status.get('id')) });\n            }\n          }\n          if (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION) {\n            const domain = status.getIn(['account', 'acct']).split('@')[1];\n            menu.push({ text: intl.formatMessage(messages.admin_domain, { domain: domain }), href: `/admin/instances/${domain}` });\n          }\n        }\n      }\n    }\n\n    const reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n\n    let reblogTitle;\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n    }\n\n    return (\n      <div className='detailed-status__action-bar'>\n        <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.reply)} icon={status.get('in_reply_to_id', null) === null ? 'reply' : 'reply-all'} onClick={this.handleReplyClick} /></div>\n        <div className='detailed-status__button'><IconButton className={classNames({ reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' onClick={this.handleReblogClick} /></div>\n        <div className='detailed-status__button'><IconButton className='star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' onClick={this.handleFavouriteClick} /></div>\n        <div className='detailed-status__button'><IconButton className='bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' onClick={this.handleBookmarkClick} /></div>\n\n        <div className='detailed-status__action-bar-dropdown'>\n          <DropdownMenuContainer size={18} icon='ellipsis-h' items={menu} direction='left' title={intl.formatMessage(messages.more)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(ActionBar);\n","import { connect } from 'react-redux';\n\nimport { openDropdownMenu, closeDropdownMenu } from 'flavours/glitch/actions/dropdown_menu';\nimport { fetchHistory } from 'flavours/glitch/actions/history';\nimport DropdownMenu from 'flavours/glitch/components/dropdown_menu';\n\n/**\n *\n * @param {import('flavours/glitch/store').RootState} state\n * @param {*} props\n */\nconst mapStateToProps = (state, { statusId }) => ({\n  openDropdownId: state.dropdownMenu.openId,\n  openedViaKeyboard: state.dropdownMenu.keyboard,\n  items: state.getIn(['history', statusId, 'items']),\n  loading: state.getIn(['history', statusId, 'loading']),\n});\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onOpen (id, onItemClick, keyboard) {\n    dispatch(fetchHistory(statusId));\n    dispatch(openDropdownMenu({ id, keyboard }));\n  },\n\n  onClose (id) {\n    dispatch(closeDropdownMenu({ id }));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport { Icon } from 'flavours/glitch/components/icon';\nimport InlineAccount from 'flavours/glitch/components/inline_account';\nimport { RelativeTimestamp } from 'flavours/glitch/components/relative_timestamp';\n\nimport DropdownMenu from './containers/dropdown_menu_container';\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onItemClick (index) {\n    dispatch(openModal({\n      modalType: 'COMPARE_HISTORY',\n      modalProps: { index, statusId },\n    }));\n  },\n\n});\n\nclass EditedTimestamp extends PureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    timestamp: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n  };\n\n  handleItemClick = (item, i) => {\n    const { onItemClick } = this.props;\n    onItemClick(i);\n  };\n\n  renderHeader = items => {\n    return (\n      <FormattedMessage id='status.edited_x_times' defaultMessage='Edited {count, plural, one {# time} other {# times}}' values={{ count: items.size - 1 }} />\n    );\n  };\n\n  renderItem = (item, index, { onClick, onKeyPress }) => {\n    const formattedDate = <RelativeTimestamp timestamp={item.get('created_at')} short={false} />;\n    const formattedName = <InlineAccount accountId={item.get('account')} />;\n\n    const label = item.get('original') ? (\n      <FormattedMessage id='status.history.created' defaultMessage='{name} created {date}' values={{ name: formattedName, date: formattedDate }} />\n    ) : (\n      <FormattedMessage id='status.history.edited' defaultMessage='{name} edited {date}' values={{ name: formattedName, date: formattedDate }} />\n    );\n\n    return (\n      <li className='dropdown-menu__item edited-timestamp__history__item' key={item.get('created_at')}>\n        <button data-index={index} onClick={onClick} onKeyPress={onKeyPress}>{label}</button>\n      </li>\n    );\n  };\n\n  render () {\n    const { timestamp, intl, statusId } = this.props;\n\n    return (\n      <DropdownMenu statusId={statusId} renderItem={this.renderItem} scrollable renderHeader={this.renderHeader} onItemClick={this.handleItemClick}>\n        <button className='dropdown-menu__text-button'>\n          <FormattedMessage id='status.edited' defaultMessage='Edited {date}' values={{ date: intl.formatDate(timestamp, { hourCycle: 'h23', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }) }} /> <Icon id='caret-down' />\n        </button>\n      </DropdownMenu>\n    );\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(injectIntl(EditedTimestamp));\n","import PropTypes from 'prop-types';\n\nimport { injectIntl, FormattedDate } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { AnimatedNumber } from 'flavours/glitch/components/animated_number';\nimport AttachmentList from 'flavours/glitch/components/attachment_list';\nimport { Avatar } from 'flavours/glitch/components/avatar';\nimport { DisplayName } from 'flavours/glitch/components/display_name';\nimport EditedTimestamp from 'flavours/glitch/components/edited_timestamp';\nimport { Icon } from 'flavours/glitch/components/icon';\nimport MediaGallery from 'flavours/glitch/components/media_gallery';\nimport PictureInPicturePlaceholder from 'flavours/glitch/components/picture_in_picture_placeholder';\nimport StatusContent from 'flavours/glitch/components/status_content';\nimport VisibilityIcon from 'flavours/glitch/components/status_visibility_icon';\nimport PollContainer from 'flavours/glitch/containers/poll_container';\nimport Audio from 'flavours/glitch/features/audio';\nimport Video from 'flavours/glitch/features/video';\n\nimport scheduleIdleTask from '../../ui/util/schedule_idle_task';\n\nimport Card from './card';\n\n\n\n\nclass DetailedStatus extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    settings: ImmutablePropTypes.map.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n    onOpenVideo: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func,\n    onTranslate: PropTypes.func.isRequired,\n    expanded: PropTypes.bool,\n    measureHeight: PropTypes.bool,\n    onHeightChange: PropTypes.func,\n    domain: PropTypes.string.isRequired,\n    compact: PropTypes.bool,\n    showMedia: PropTypes.bool,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    onToggleMediaVisibility: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    height: null,\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.altKey || e.metaKey) && this.context.router) {\n      e.preventDefault();\n      this.context.router.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n    }\n\n    e.stopPropagation();\n  };\n\n  parseClick = (e, destination) => {\n    if (e.button === 0 && !(e.ctrlKey || e.altKey || e.metaKey) && this.context.router) {\n      e.preventDefault();\n      this.context.router.history.push(destination);\n    }\n\n    e.stopPropagation();\n  };\n\n  handleOpenVideo = (options) => {\n    this.props.onOpenVideo(this.props.status.getIn(['media_attachments', 0]), options);\n  };\n\n  _measureHeight (heightJustChanged) {\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(() => this.node && this.setState({ height: Math.ceil(this.node.scrollHeight) + 1 }));\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n    this._measureHeight();\n  };\n\n  componentDidUpdate (prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  }\n\n  handleChildUpdate = () => {\n    this._measureHeight();\n  };\n\n  handleModalLink = e => {\n    e.preventDefault();\n\n    let href;\n\n    if (e.target.nodeName !== 'A') {\n      href = e.target.parentNode.href;\n    } else {\n      href = e.target.href;\n    }\n\n    window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n  };\n\n  handleTranslate = () => {\n    const { onTranslate, status } = this.props;\n    onTranslate(status);\n  };\n\n  render () {\n    const status = (this.props.status && this.props.status.get('reblog')) ? this.props.status.get('reblog') : this.props.status;\n    const outerStyle = { boxSizing: 'border-box' };\n    const { compact, pictureInPicture, expanded, onToggleHidden, settings } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    let applicationLink = '';\n    let reblogLink = '';\n    let reblogIcon = 'retweet';\n    let favouriteLink = '';\n    let edited = '';\n\n    //  Depending on user settings, some media are considered as parts of the\n    //  contents (affected by CW) while other will be displayed outside of the\n    //  CW.\n    let contentMedia = [];\n    let contentMediaIcons = [];\n    let extraMedia = [];\n    let extraMediaIcons = [];\n    let media = contentMedia;\n    let mediaIcons = contentMediaIcons;\n\n    if (settings.getIn(['content_warnings', 'media_outside'])) {\n      media = extraMedia;\n      mediaIcons = extraMediaIcons;\n    }\n\n    if (this.props.measureHeight) {\n      outerStyle.height = `${this.state.height}px`;\n    }\n\n    const language = status.getIn(['translation', 'language']) || status.get('language');\n\n    if (pictureInPicture.get('inUse')) {\n      media.push(<PictureInPicturePlaceholder />);\n      mediaIcons.push('video-camera');\n    } else if (status.get('media_attachments').size > 0) {\n      if (status.get('media_attachments').some(item => item.get('type') === 'unknown')) {\n        media.push(<AttachmentList media={status.get('media_attachments')} />);\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media.push(\n          <Audio\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            duration={attachment.getIn(['meta', 'original', 'duration'], 0)}\n            poster={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            backgroundColor={attachment.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={attachment.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={attachment.getIn(['meta', 'colors', 'accent'])}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            blurhash={attachment.get('blurhash')}\n            height={150}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />,\n        );\n        mediaIcons.push('music');\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media.push(\n          <Video\n            preview={attachment.get('preview_url')}\n            frameRate={attachment.getIn(['meta', 'original', 'frame_rate'])}\n            blurhash={attachment.get('blurhash')}\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            inline\n            sensitive={status.get('sensitive')}\n            letterbox={settings.getIn(['media', 'letterbox'])}\n            fullwidth={settings.getIn(['media', 'fullwidth'])}\n            preventPlayback={!expanded}\n            onOpenVideo={this.handleOpenVideo}\n            autoplay\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />,\n        );\n        mediaIcons.push('video-camera');\n      } else {\n        media.push(\n          <MediaGallery\n            standalone\n            sensitive={status.get('sensitive')}\n            media={status.get('media_attachments')}\n            lang={language}\n            letterbox={settings.getIn(['media', 'letterbox'])}\n            fullwidth={settings.getIn(['media', 'fullwidth'])}\n            hidden={!expanded}\n            onOpenMedia={this.props.onOpenMedia}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />,\n        );\n        mediaIcons.push('picture-o');\n      }\n    } else if (status.get('card')) {\n      media.push(<Card sensitive={status.get('sensitive')} onOpenMedia={this.props.onOpenMedia} card={status.get('card')} />);\n      mediaIcons.push('link');\n    }\n\n    if (status.get('poll')) {\n      contentMedia.push(<PollContainer pollId={status.get('poll')} lang={status.get('language')} />);\n      contentMediaIcons.push('tasks');\n    }\n\n    if (status.get('application')) {\n      applicationLink = <> · <a className='detailed-status__application' href={status.getIn(['application', 'website'])} target='_blank' rel='noopener noreferrer'>{status.getIn(['application', 'name'])}</a></>;\n    }\n\n    const visibilityLink = <> · <VisibilityIcon visibility={status.get('visibility')} /></>;\n\n    if (status.get('visibility') === 'direct') {\n      reblogIcon = 'envelope';\n    } else if (status.get('visibility') === 'private') {\n      reblogIcon = 'lock';\n    }\n\n    if (!['unlisted', 'public'].includes(status.get('visibility'))) {\n      reblogLink = null;\n    } else if (this.context.router) {\n      reblogLink = (\n        <>\n          {' · '}\n          <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/reblogs`} className='detailed-status__link'>\n            <Icon id={reblogIcon} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </Link>\n        </>\n      );\n    } else {\n      reblogLink = (\n        <>\n          {' · '}\n          <a href={`/interact/${status.get('id')}?type=reblog`} className='detailed-status__link' onClick={this.handleModalLink}>\n            <Icon id={reblogIcon} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </a>\n        </>\n      );\n    }\n\n    if (this.context.router) {\n      favouriteLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/favourites`} className='detailed-status__link'>\n          <Icon id='star' />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </Link>\n      );\n    } else {\n      favouriteLink = (\n        <a href={`/interact/${status.get('id')}?type=favourite`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <Icon id='star' />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </a>\n      );\n    }\n\n    if (status.get('edited_at')) {\n      edited = (\n        <>\n          {' · '}\n          <EditedTimestamp statusId={status.get('id')} timestamp={status.get('edited_at')} />\n        </>\n      );\n    }\n\n    return (\n      <div style={outerStyle}>\n        <div ref={this.setRef} className={classNames('detailed-status', `detailed-status-${status.get('visibility')}`, { compact })} data-status-by={status.getIn(['account', 'acct'])}>\n          <a href={status.getIn(['account', 'url'])} onClick={this.handleAccountClick} className='detailed-status__display-name'>\n            <div className='detailed-status__display-avatar'><Avatar account={status.get('account')} size={48} /></div>\n            <DisplayName account={status.get('account')} localDomain={this.props.domain} />\n          </a>\n\n          <StatusContent\n            status={status}\n            media={contentMedia}\n            extraMedia={extraMedia}\n            mediaIcons={contentMediaIcons}\n            expanded={expanded}\n            collapsed={false}\n            onExpandedToggle={onToggleHidden}\n            onTranslate={this.handleTranslate}\n            parseClick={this.parseClick}\n            onUpdate={this.handleChildUpdate}\n            tagLinks={settings.get('tag_misleading_links')}\n            rewriteMentions={settings.get('rewrite_mentions')}\n            disabled\n          />\n\n          <div className='detailed-status__meta'>\n            <a className='detailed-status__datetime' href={status.get('url')} target='_blank' rel='noopener noreferrer'>\n              <FormattedDate value={new Date(status.get('created_at'))} hourCycle='h23' year='numeric' month='short' day='2-digit' hour='2-digit' minute='2-digit' />\n            </a>{edited}{visibilityLink}{applicationLink}{reblogLink} · {favouriteLink}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(DetailedStatus);\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\n\nimport Immutable from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { HotKeys } from 'react-hotkeys';\n\nimport { initBlockModal } from 'flavours/glitch/actions/blocks';\nimport { initBoostModal } from 'flavours/glitch/actions/boosts';\nimport {\n  replyCompose,\n  mentionCompose,\n  directCompose,\n} from 'flavours/glitch/actions/compose';\nimport {\n  favourite,\n  unfavourite,\n  bookmark,\n  unbookmark,\n  reblog,\n  unreblog,\n  pin,\n  unpin,\n} from 'flavours/glitch/actions/interactions';\nimport { changeLocalSetting } from 'flavours/glitch/actions/local_settings';\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport { initMuteModal } from 'flavours/glitch/actions/mutes';\nimport { initReport } from 'flavours/glitch/actions/reports';\nimport {\n  fetchStatus,\n  muteStatus,\n  unmuteStatus,\n  deleteStatus,\n  editStatus,\n  hideStatus,\n  revealStatus,\n  translateStatus,\n  undoStatusTranslation,\n} from 'flavours/glitch/actions/statuses';\nimport { Icon } from 'flavours/glitch/components/icon';\nimport { LoadingIndicator } from 'flavours/glitch/components/loading_indicator';\nimport { textForScreenReader, defaultMediaVisibility } from 'flavours/glitch/components/status';\nimport ScrollContainer from 'flavours/glitch/containers/scroll_container';\nimport StatusContainer from 'flavours/glitch/containers/status_container';\nimport BundleColumnError from 'flavours/glitch/features/ui/components/bundle_column_error';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport { boostModal, favouriteModal, deleteModal } from 'flavours/glitch/initial_state';\nimport { makeGetStatus, makeGetPictureInPicture } from 'flavours/glitch/selectors';\nimport { autoUnfoldCW } from 'flavours/glitch/utils/content_warning';\n\nimport ColumnHeader from '../../components/column_header';\nimport { attachFullscreenListener, detachFullscreenListener, isFullscreen } from '../ui/util/fullscreen';\n\nimport ActionBar from './components/action_bar';\nimport DetailedStatus from './components/detailed_status';\n\nconst messages = defineMessages({\n  deleteConfirm: { id: 'confirmations.delete.confirm', defaultMessage: 'Delete' },\n  deleteMessage: { id: 'confirmations.delete.message', defaultMessage: 'Are you sure you want to delete this status?' },\n  redraftConfirm: { id: 'confirmations.redraft.confirm', defaultMessage: 'Delete & redraft' },\n  redraftMessage: { id: 'confirmations.redraft.message', defaultMessage: 'Are you sure you want to delete this status and re-draft it? Favorites and boosts will be lost, and replies to the original post will be orphaned.' },\n  revealAll: { id: 'status.show_more_all', defaultMessage: 'Show more for all' },\n  hideAll: { id: 'status.show_less_all', defaultMessage: 'Show less for all' },\n  statusTitleWithAttachments: { id: 'status.title.with_attachments', defaultMessage: '{user} posted {attachmentCount, plural, one {an attachment} other {# attachments}}' },\n  detailedStatus: { id: 'status.detailed_status', defaultMessage: 'Detailed conversation view' },\n  replyConfirm: { id: 'confirmations.reply.confirm', defaultMessage: 'Reply' },\n  replyMessage: { id: 'confirmations.reply.message', defaultMessage: 'Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?' },\n  tootHeading: { id: 'account.posts_with_replies', defaultMessage: 'Posts and replies' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n  const getPictureInPicture = makeGetPictureInPicture();\n\n  const getAncestorsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'inReplyTos']),\n  ], (statusId, inReplyTos) => {\n    let ancestorsIds = Immutable.List();\n    ancestorsIds = ancestorsIds.withMutations(mutable => {\n      let id = statusId;\n\n      while (id && !mutable.includes(id)) {\n        mutable.unshift(id);\n        id = inReplyTos.get(id);\n      }\n    });\n\n    return ancestorsIds;\n  });\n\n  const getDescendantsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'replies']),\n    state => state.get('statuses'),\n  ], (statusId, contextReplies, statuses) => {\n    let descendantsIds = [];\n    const ids = [statusId];\n\n    while (ids.length > 0) {\n      let id        = ids.pop();\n      const replies = contextReplies.get(id);\n\n      if (statusId !== id) {\n        descendantsIds.push(id);\n      }\n\n      if (replies) {\n        replies.reverse().forEach(reply => {\n          if (!ids.includes(reply) && !descendantsIds.includes(reply) && statusId !== reply) ids.push(reply);\n        });\n      }\n    }\n\n    let insertAt = descendantsIds.findIndex((id) => statuses.get(id).get('in_reply_to_account_id') !== statuses.get(id).get('account'));\n    if (insertAt !== -1) {\n      descendantsIds.forEach((id, idx) => {\n        if (idx > insertAt && statuses.get(id).get('in_reply_to_account_id') === statuses.get(id).get('account')) {\n          descendantsIds.splice(idx, 1);\n          descendantsIds.splice(insertAt, 0, id);\n          insertAt += 1;\n        }\n      });\n    }\n\n    return Immutable.List(descendantsIds);\n  });\n\n  const mapStateToProps = (state, props) => {\n    const status = getStatus(state, { id: props.params.statusId });\n\n    let ancestorsIds   = Immutable.List();\n    let descendantsIds = Immutable.List();\n\n    if (status) {\n      ancestorsIds   = getAncestorsIds(state, { id: status.get('in_reply_to_id') });\n      descendantsIds = getDescendantsIds(state, { id: status.get('id') });\n    }\n\n    return {\n      isLoading: state.getIn(['statuses', props.params.statusId, 'isLoading']),\n      status,\n      ancestorsIds,\n      descendantsIds,\n      settings: state.get('local_settings'),\n      askReplyConfirmation: state.getIn(['local_settings', 'confirm_before_clearing_draft']) && state.getIn(['compose', 'text']).trim().length !== 0,\n      domain: state.getIn(['meta', 'domain']),\n      pictureInPicture: getPictureInPicture(state, { id: props.params.statusId }),\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst truncate = (str, num) => {\n  const arr = Array.from(str);\n  if (arr.length > num) {\n    return arr.slice(0, num).join('') + '…';\n  } else {\n    return str;\n  }\n};\n\nconst titleFromStatus = (intl, status) => {\n  const displayName = status.getIn(['account', 'display_name']);\n  const username = status.getIn(['account', 'username']);\n  const user = displayName.trim().length === 0 ? username : displayName;\n  const text = status.get('search_index');\n  const attachmentCount = status.get('media_attachments').size;\n\n  return text ? `${user}: \"${truncate(text, 30)}\"` : intl.formatMessage(messages.statusTitleWithAttachments, { user, attachmentCount });\n};\n\nclass Status extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    isLoading: PropTypes.bool,\n    settings: ImmutablePropTypes.map.isRequired,\n    ancestorsIds: ImmutablePropTypes.list.isRequired,\n    descendantsIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n  };\n\n  state = {\n    fullscreen: false,\n    isExpanded: undefined,\n    threadExpanded: undefined,\n    statusId: undefined,\n    loadedStatusId: undefined,\n    showMedia: undefined,\n    revealBehindCW: undefined,\n  };\n\n  componentDidMount () {\n    attachFullscreenListener(this.onFullScreenChange);\n    this.props.dispatch(fetchStatus(this.props.params.statusId));\n    this._scrollStatusIntoView();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let update = {};\n    let updated = false;\n\n    if (props.params.statusId && state.statusId !== props.params.statusId) {\n      props.dispatch(fetchStatus(props.params.statusId));\n      update.threadExpanded = undefined;\n      update.statusId = props.params.statusId;\n      updated = true;\n    }\n\n    const revealBehindCW = props.settings.getIn(['media', 'reveal_behind_cw']);\n    if (revealBehindCW !== state.revealBehindCW) {\n      update.revealBehindCW = revealBehindCW;\n      if (revealBehindCW) update.showMedia = defaultMediaVisibility(props.status, props.settings);\n      updated = true;\n    }\n\n    if (props.status && state.loadedStatusId !== props.status.get('id')) {\n      update.showMedia = defaultMediaVisibility(props.status, props.settings);\n      update.loadedStatusId = props.status.get('id');\n      update.isExpanded = autoUnfoldCW(props.settings, props.status);\n      updated = true;\n    }\n\n    return updated ? update : null;\n  }\n\n  handleToggleHidden = () => {\n    const { status } = this.props;\n\n    if (this.props.settings.getIn(['content_warnings', 'shared_state'])) {\n      if (status.get('hidden')) {\n        this.props.dispatch(revealStatus(status.get('id')));\n      } else {\n        this.props.dispatch(hideStatus(status.get('id')));\n      }\n    } else if (this.props.status.get('spoiler_text')) {\n      this.setExpansion(!this.state.isExpanded);\n    }\n  };\n\n  handleToggleMediaVisibility = () => {\n    this.setState({ showMedia: !this.state.showMedia });\n  };\n\n  handleModalFavourite = (status) => {\n    this.props.dispatch(favourite(status));\n  };\n\n  handleFavouriteClick = (status, e) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (status.get('favourited')) {\n        dispatch(unfavourite(status));\n      } else {\n        if ((e && e.shiftKey) || !favouriteModal) {\n          this.handleModalFavourite(status);\n        } else {\n          dispatch(openModal({\n            modalType: 'FAVOURITE',\n            modalProps: {\n              status,\n              onFavourite: this.handleModalFavourite,\n            },\n          }));\n        }\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'favourite',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handlePin = (status) => {\n    if (status.get('pinned')) {\n      this.props.dispatch(unpin(status));\n    } else {\n      this.props.dispatch(pin(status));\n    }\n  };\n\n  handleReplyClick = (status) => {\n    const { askReplyConfirmation, dispatch, intl } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (askReplyConfirmation) {\n        dispatch(openModal({\n          modalType: 'CONFIRM',\n          modalProps: {\n            message: intl.formatMessage(messages.replyMessage),\n            confirm: intl.formatMessage(messages.replyConfirm),\n            onDoNotAsk: () => dispatch(changeLocalSetting(['confirm_before_clearing_draft'], false)),\n            onConfirm: () => dispatch(replyCompose(status, this.context.router.history)),\n          },\n        }));\n      } else {\n        dispatch(replyCompose(status, this.context.router.history));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reply',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleModalReblog = (status, privacy) => {\n    const { dispatch } = this.props;\n\n    if (status.get('reblogged')) {\n      dispatch(unreblog(status));\n    } else {\n      dispatch(reblog(status, privacy));\n    }\n  };\n\n  handleReblogClick = (status, e) => {\n    const { settings, dispatch } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (settings.get('confirm_boost_missing_media_description') && status.get('media_attachments').some(item => !item.get('description')) && !status.get('reblogged')) {\n        dispatch(initBoostModal({ status, onReblog: this.handleModalReblog, missingMediaDescription: true }));\n      } else if ((e && e.shiftKey) || !boostModal) {\n        this.handleModalReblog(status);\n      } else {\n        dispatch(initBoostModal({ status, onReblog: this.handleModalReblog }));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reblog',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleBookmarkClick = (status) => {\n    if (status.get('bookmarked')) {\n      this.props.dispatch(unbookmark(status));\n    } else {\n      this.props.dispatch(bookmark(status));\n    }\n  };\n\n  handleDeleteClick = (status, history, withRedraft = false) => {\n    const { dispatch, intl } = this.props;\n\n    if (!deleteModal) {\n      dispatch(deleteStatus(status.get('id'), history, withRedraft));\n    } else {\n      dispatch(openModal({\n        modalType: 'CONFIRM',\n        modalProps: {\n          message: intl.formatMessage(withRedraft ? messages.redraftMessage : messages.deleteMessage),\n          confirm: intl.formatMessage(withRedraft ? messages.redraftConfirm : messages.deleteConfirm),\n          onConfirm: () => dispatch(deleteStatus(status.get('id'), history, withRedraft)),\n        },\n      }));\n    }\n  };\n\n  handleEditClick = (status, history) => {\n    this.props.dispatch(editStatus(status.get('id'), history));\n  };\n\n  handleDirectClick = (account, router) => {\n    this.props.dispatch(directCompose(account, router));\n  };\n\n  handleMentionClick = (account, router) => {\n    this.props.dispatch(mentionCompose(account, router));\n  };\n\n  handleOpenMedia = (media, index, lang) => {\n    this.props.dispatch(openModal({\n      modalType: 'MEDIA',\n      modalProps: { statusId: this.props.status.get('id'), media, index, lang },\n    }));\n  };\n\n  handleOpenVideo = (media, lang, options) => {\n    this.props.dispatch(openModal({\n      modalType: 'VIDEO',\n      modalProps: { statusId: this.props.status.get('id'), media, lang, options },\n    }));\n  };\n\n  handleHotkeyOpenMedia = e => {\n    const { status } = this.props;\n\n    e.preventDefault();\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        this.handleOpenVideo(status.getIn(['media_attachments', 0]), { startTime: 0 });\n      } else {\n        this.handleOpenMedia(status.get('media_attachments'), 0);\n      }\n    }\n  };\n\n  handleMuteClick = (account) => {\n    this.props.dispatch(initMuteModal(account));\n  };\n\n  handleConversationMuteClick = (status) => {\n    if (status.get('muted')) {\n      this.props.dispatch(unmuteStatus(status.get('id')));\n    } else {\n      this.props.dispatch(muteStatus(status.get('id')));\n    }\n  };\n\n  handleToggleAll = () => {\n    const { status, ancestorsIds, descendantsIds, settings } = this.props;\n    const statusIds = [status.get('id')].concat(ancestorsIds.toJS(), descendantsIds.toJS());\n    let { isExpanded } = this.state;\n\n    if (settings.getIn(['content_warnings', 'shared_state']))\n      isExpanded = !status.get('hidden');\n\n    if (!isExpanded) {\n      this.props.dispatch(revealStatus(statusIds));\n    } else {\n      this.props.dispatch(hideStatus(statusIds));\n    }\n\n    this.setState({ isExpanded: !isExpanded, threadExpanded: !isExpanded });\n  };\n\n  handleTranslate = status => {\n    const { dispatch } = this.props;\n\n    if (status.get('translation')) {\n      dispatch(undoStatusTranslation(status.get('id'), status.get('poll')));\n    } else {\n      dispatch(translateStatus(status.get('id')));\n    }\n  };\n\n  handleBlockClick = (status) => {\n    const { dispatch } = this.props;\n    const account = status.get('account');\n    dispatch(initBlockModal(account));\n  };\n\n  handleReport = (status) => {\n    this.props.dispatch(initReport(status.get('account'), status));\n  };\n\n  handleEmbed = (status) => {\n    this.props.dispatch(openModal({\n      modalType: 'EMBED',\n      modalProps: { id: status.get('id') },\n    }));\n  };\n\n  handleHotkeyToggleSensitive = () => {\n    this.handleToggleMediaVisibility();\n  };\n\n  handleHotkeyMoveUp = () => {\n    this.handleMoveUp(this.props.status.get('id'));\n  };\n\n  handleHotkeyMoveDown = () => {\n    this.handleMoveDown(this.props.status.get('id'));\n  };\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.handleReplyClick(this.props.status);\n  };\n\n  handleHotkeyFavourite = () => {\n    this.handleFavouriteClick(this.props.status);\n  };\n\n  handleHotkeyBoost = () => {\n    this.handleReblogClick(this.props.status);\n  };\n\n  handleHotkeyBookmark = () => {\n    this.handleBookmarkClick(this.props.status);\n  };\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.handleMentionClick(this.props.status);\n  };\n\n  handleHotkeyOpenProfile = () => {\n    this.context.router.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n  };\n\n  handleMoveUp = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size - 1, true);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index, true);\n      } else {\n        this._selectChild(index - 1, true);\n      }\n    }\n  };\n\n  handleMoveDown = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size + 1, false);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index + 2, false);\n      } else {\n        this._selectChild(index + 1, false);\n      }\n    }\n  };\n\n  _selectChild (index, align_top) {\n    const container = this.node;\n    const element = container.querySelectorAll('.focusable')[index];\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  renderChildren (list, ancestors) {\n    const { params: { statusId } } = this.props;\n\n    return list.map((id, i) => (\n      <StatusContainer\n        key={id}\n        id={id}\n        expanded={this.state.threadExpanded}\n        onMoveUp={this.handleMoveUp}\n        onMoveDown={this.handleMoveDown}\n        contextType='thread'\n        previousId={i > 0 ? list.get(i - 1) : undefined}\n        nextId={list.get(i + 1) || (ancestors && statusId)}\n        rootId={statusId}\n      />\n    ));\n  }\n\n  setExpansion = value => {\n    this.setState({ isExpanded: value });\n  };\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  setColumnRef = c => {\n    this.column = c;\n  };\n\n  _scrollStatusIntoView () {\n    const { status, multiColumn } = this.props;\n\n    if (status) {\n      window.requestAnimationFrame(() => {\n        this.node?.querySelector('.detailed-status__wrapper')?.scrollIntoView(true);\n\n        // In the single-column interface, `scrollIntoView` will put the post behind the header,\n        // so compensate for that.\n        if (!multiColumn) {\n          const offset = document.querySelector('.column-header__wrapper')?.getBoundingClientRect()?.bottom;\n          if (offset) {\n            const scrollingElement = document.scrollingElement || document.body;\n            scrollingElement.scrollBy(0, -offset);\n          }\n        }\n      });\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { status, ancestorsIds } = this.props;\n\n    if (status && (ancestorsIds.size > prevProps.ancestorsIds.size || prevProps.status?.get('id') !== status.get('id'))) {\n      this._scrollStatusIntoView();\n    }\n  }\n\n  componentWillUnmount () {\n    detachFullscreenListener(this.onFullScreenChange);\n  }\n\n  onFullScreenChange = () => {\n    this.setState({ fullscreen: isFullscreen() });\n  };\n\n  shouldUpdateScroll = (prevRouterProps, { location }) => {\n    // Do not change scroll when opening a modal\n    if (location.state?.mastodonModalKey !== prevRouterProps?.location?.state?.mastodonModalKey) {\n      return false;\n    }\n\n    // Scroll to focused post if it is loaded\n    const child = this.node?.querySelector('.detailed-status__wrapper');\n    if (child) {\n      return [0, child.offsetTop];\n    }\n\n    // Do not scroll otherwise, `componentDidUpdate` will take care of that\n    return false;\n  };\n\n  render () {\n    let ancestors, descendants;\n    const { isLoading, status, settings, ancestorsIds, descendantsIds, intl, domain, multiColumn, pictureInPicture } = this.props;\n    const { fullscreen } = this.state;\n\n    if (isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    if (status === null) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    const isExpanded = settings.getIn(['content_warnings', 'shared_state']) ? !status.get('hidden') : this.state.isExpanded;\n\n    if (ancestorsIds && ancestorsIds.size > 0) {\n      ancestors = <>{this.renderChildren(ancestorsIds, true)}</>;\n    }\n\n    if (descendantsIds && descendantsIds.size > 0) {\n      descendants = <>{this.renderChildren(descendantsIds)}</>;\n    }\n\n    const isLocal = status.getIn(['account', 'acct'], '').indexOf('@') === -1;\n    const isIndexable = !status.getIn(['account', 'noindex']);\n\n    const handlers = {\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      bookmark: this.handleHotkeyBookmark,\n      mention: this.handleHotkeyMention,\n      openProfile: this.handleHotkeyOpenProfile,\n      toggleSpoiler: this.handleToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia,\n    };\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setColumnRef} label={intl.formatMessage(messages.detailedStatus)}>\n        <ColumnHeader\n          icon='comment'\n          title={intl.formatMessage(messages.tootHeading)}\n          onClick={this.handleHeaderClick}\n          showBackButton\n          multiColumn={multiColumn}\n          extraButton={(\n            <button type='button' className='column-header__button' title={intl.formatMessage(!isExpanded ? messages.revealAll : messages.hideAll)} aria-label={intl.formatMessage(!isExpanded ? messages.revealAll : messages.hideAll)} onClick={this.handleToggleAll}><Icon id={!isExpanded ? 'eye-slash' : 'eye'} /></button>\n          )}\n        />\n\n        <ScrollContainer scrollKey='thread' shouldUpdateScroll={this.shouldUpdateScroll}>\n          <div className={classNames('scrollable', { fullscreen })} ref={this.setRef}>\n            {ancestors}\n\n            <HotKeys handlers={handlers}>\n              <div className={classNames('focusable', 'detailed-status__wrapper', `detailed-status__wrapper-${status.get('visibility')}`)} tabIndex={0} aria-label={textForScreenReader(intl, status, false, isExpanded)}>\n                <DetailedStatus\n                  key={`details-${status.get('id')}`}\n                  status={status}\n                  settings={settings}\n                  onOpenVideo={this.handleOpenVideo}\n                  onOpenMedia={this.handleOpenMedia}\n                  expanded={isExpanded}\n                  onToggleHidden={this.handleToggleHidden}\n                  onTranslate={this.handleTranslate}\n                  domain={domain}\n                  showMedia={this.state.showMedia}\n                  onToggleMediaVisibility={this.handleToggleMediaVisibility}\n                  pictureInPicture={pictureInPicture}\n                />\n\n                <ActionBar\n                  key={`action-bar-${status.get('id')}`}\n                  status={status}\n                  onReply={this.handleReplyClick}\n                  onFavourite={this.handleFavouriteClick}\n                  onReblog={this.handleReblogClick}\n                  onBookmark={this.handleBookmarkClick}\n                  onDelete={this.handleDeleteClick}\n                  onEdit={this.handleEditClick}\n                  onDirect={this.handleDirectClick}\n                  onMention={this.handleMentionClick}\n                  onMute={this.handleMuteClick}\n                  onMuteConversation={this.handleConversationMuteClick}\n                  onBlock={this.handleBlockClick}\n                  onReport={this.handleReport}\n                  onPin={this.handlePin}\n                  onEmbed={this.handleEmbed}\n                />\n              </div>\n            </HotKeys>\n\n            {descendants}\n          </div>\n        </ScrollContainer>\n\n        <Helmet>\n          <title>{titleFromStatus(intl, status)}</title>\n          <meta name='robots' content={(isLocal && isIndexable) ? 'all' : 'noindex'} />\n          <link rel='canonical' href={status.get('url')} />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default injectIntl(connect(makeMapStateToProps)(Status));\n"],"sourceRoot":""}