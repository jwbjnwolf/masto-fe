{"version":3,"sources":["webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/getting_started_misc/index.jsx"],"names":["messages","defineMessages","heading","id","defaultMessage","subheading","favourites","blocks","domain_blocks","mutes","show_me_around","pins","keyboard_shortcuts","featured_users","GettingStartedMisc","ImmutablePureComponent","constructor","arguments","openOnboardingModal","this","props","dispatch","openModal","modalType","openFeaturedAccountsModal","render","intl","signedIn","context","identity","_jsx","Column","icon","formatMessage","ColumnBackButtonSlim","className","ColumnSubheading","text","ColumnLink","to","onClick","contextTypes","router","PropTypes","object","isRequired","propTypes","func","connect","injectIntl"],"mappings":"4MAcA,MAAMA,EAAWC,YAAe,CAC9BC,QAAS,CAAEC,GAAG,iBAAmBC,eAAe,QAChDC,WAAY,CAAEF,GAAG,oBAAsBC,eAAe,yBACtDE,WAAY,CAAEH,GAAG,4BAA8BC,eAAe,aAC9DG,OAAQ,CAAEJ,GAAG,wBAA0BC,eAAe,iBACtDI,cAAe,CAAEL,GAAG,+BAAiCC,eAAe,mBACpEK,MAAO,CAAEN,GAAG,uBAAyBC,eAAe,eACpDM,eAAgB,CAAEP,GAAG,6BAA+BC,eAAe,kBACnEO,KAAM,CAAER,GAAG,sBAAwBC,eAAe,gBAClDQ,mBAAoB,CAAET,GAAG,oCAAsCC,eAAe,sBAC9ES,eAAgB,CAAEV,GAAG,gCAAkCC,eAAe,oBAGxE,MAAMU,UAA2BC,IAAuBC,cAAA,SAAAC,WAAA,KAYtDC,oBAAsB,KACpBC,KAAKC,MAAMC,SAASC,YAAU,CAC5BC,UAAW,eACV,EACH,KAEFC,0BAA4B,KAC1BL,KAAKC,MAAMC,SAASC,YAAU,CAC5BC,UAAW,2BACV,CACH,CAEFE,SACE,MAAM,KAAEC,GAASP,KAAKC,OAChB,SAAEO,GAAaR,KAAKS,QAAQC,SAElC,OACEC,YAACC,IAAM,CAACC,KAAK,aAAa9B,QAASwB,EAAKO,cAAcjC,EAASE,eAAS,EACtE4B,YAACI,IAAoB,IAErBJ,YAAA,OAAKK,UAAU,mBAAY,EACzBL,YAACM,IAAgB,CAACC,KAAMX,EAAKO,cAAcjC,EAASK,cACnDsB,GAAaG,YAACQ,IAAU,CAAkBN,KAAK,OAAOK,KAAMX,EAAKO,cAAcjC,EAASM,YAAaiC,GAAG,eAA3E,cAC7BZ,GAAaG,YAACQ,IAAU,CAAcN,KAAK,aAAaK,KAAMX,EAAKO,cAAcjC,EAASW,MAAO4B,GAAG,WAAvE,UAC7BZ,GAAaG,YAACQ,IAAU,CAAsBN,KAAK,QAAQK,KAAMX,EAAKO,cAAcjC,EAASa,gBAAiB2B,QAASrB,KAAKK,2BAA/F,kBAC7BG,GAAaG,YAACQ,IAAU,CAAaN,KAAK,aAAaK,KAAMX,EAAKO,cAAcjC,EAASS,OAAQ8B,GAAG,UAAvE,SAC7BZ,GAAaG,YAACQ,IAAU,CAAcN,KAAK,MAAMK,KAAMX,EAAKO,cAAcjC,EAASO,QAASgC,GAAG,WAAlE,UAC7BZ,GAAaG,YAACQ,IAAU,CAAqBN,KAAK,eAAeK,KAAMX,EAAKO,cAAcjC,EAASQ,eAAgB+B,GAAG,kBAAzF,iBAC9BT,YAACQ,IAAU,CAAiBN,KAAK,WAAWK,KAAMX,EAAKO,cAAcjC,EAASY,oBAAqB2B,GAAG,uBAAtF,aACfZ,GAAaG,YAACQ,IAAU,CAAkBN,KAAK,eAAeK,KAAMX,EAAKO,cAAcjC,EAASU,gBAAiB8B,QAASrB,KAAKD,qBAAlG,eAItC,EA7CIJ,EAEG2B,aAAe,CACpBC,OAAQC,IAAUC,OAAOC,WACzBhB,SAAUc,IAAUC,QAJlB9B,EAOGgC,UAAY,CACjBpB,KAAMiB,IAAUC,OAAOC,WACvBxB,SAAUsB,IAAUI,KAAKF,YAwCdG,8BAAUC,YAAWnC,G","file":"js/flavours/glitch/async/getting_started_misc.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport ColumnBackButtonSlim from 'flavours/glitch/components/column_back_button_slim';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport ColumnLink from 'flavours/glitch/features/ui/components/column_link';\nimport ColumnSubheading from 'flavours/glitch/features/ui/components/column_subheading';\n\n\nconst messages = defineMessages({\n  heading: { id: 'column.heading', defaultMessage: 'Misc' },\n  subheading: { id: 'column.subheading', defaultMessage: 'Miscellaneous options' },\n  favourites: { id: 'navigation_bar.favourites', defaultMessage: 'Favorites' },\n  blocks: { id: 'navigation_bar.blocks', defaultMessage: 'Blocked users' },\n  domain_blocks: { id: 'navigation_bar.domain_blocks', defaultMessage: 'Blocked domains' },\n  mutes: { id: 'navigation_bar.mutes', defaultMessage: 'Muted users' },\n  show_me_around: { id: 'getting_started.onboarding', defaultMessage: 'Show me around' },\n  pins: { id: 'navigation_bar.pins', defaultMessage: 'Pinned posts' },\n  keyboard_shortcuts: { id: 'navigation_bar.keyboard_shortcuts', defaultMessage: 'Keyboard shortcuts' },\n  featured_users: { id: 'navigation_bar.featured_users', defaultMessage: 'Featured users' },\n});\n\nclass GettingStartedMisc extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n  };\n\n  openOnboardingModal = () => {\n    this.props.dispatch(openModal({\n      modalType: 'ONBOARDING',\n    }));\n  };\n\n  openFeaturedAccountsModal = () => {\n    this.props.dispatch(openModal({\n      modalType: 'PINNED_ACCOUNTS_EDITOR',\n    }));\n  };\n\n  render () {\n    const { intl } = this.props;\n    const { signedIn } = this.context.identity;\n\n    return (\n      <Column icon='ellipsis-h' heading={intl.formatMessage(messages.heading)}>\n        <ColumnBackButtonSlim />\n\n        <div className='scrollable'>\n          <ColumnSubheading text={intl.formatMessage(messages.subheading)} />\n          {signedIn && (<ColumnLink key='favourites' icon='star' text={intl.formatMessage(messages.favourites)} to='/favourites' />)}\n          {signedIn && (<ColumnLink key='pinned' icon='thumb-tack' text={intl.formatMessage(messages.pins)} to='/pinned' />)}\n          {signedIn && (<ColumnLink key='featured_users' icon='users' text={intl.formatMessage(messages.featured_users)} onClick={this.openFeaturedAccountsModal} />)}\n          {signedIn && (<ColumnLink key='mutes' icon='volume-off' text={intl.formatMessage(messages.mutes)} to='/mutes' />)}\n          {signedIn && (<ColumnLink key='blocks' icon='ban' text={intl.formatMessage(messages.blocks)} to='/blocks' />)}\n          {signedIn && (<ColumnLink key='domain_blocks' icon='minus-circle' text={intl.formatMessage(messages.domain_blocks)} to='/domain_blocks' />)}\n          <ColumnLink key='shortcuts' icon='question' text={intl.formatMessage(messages.keyboard_shortcuts)} to='/keyboard-shortcuts' />\n          {signedIn && (<ColumnLink key='onboarding' icon='hand-o-right' text={intl.formatMessage(messages.show_me_around)} onClick={this.openOnboardingModal} />)}\n        </div>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect()(injectIntl(GettingStartedMisc));\n"],"sourceRoot":""}