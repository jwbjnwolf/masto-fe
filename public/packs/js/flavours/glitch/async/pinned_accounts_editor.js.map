{"version":3,"sources":["webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/pinned_accounts_editor/containers/account_container.js","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/pinned_accounts_editor/containers/search_container.js","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/pinned_accounts_editor/index.jsx"],"names":["injectIntl","connect","makeMapStateToProps","getAccount","makeGetAccount","mapStateToProps","state","_ref","accountId","added","account","getIn","includes","mapDispatchToProps","dispatch","_ref2","onRemove","unpinAccount","onAdd","pinAccount","Account","value","onSubmit","fetchPinnedAccountsSuggestions","onClear","clearPinnedAccountsSuggestions","onChange","changePinnedAccountsSuggestions","Search","PinnedAccountsEditor","ImmutablePureComponent","componentDidMount","onInitialize","this","props","componentWillUnmount","onReset","render","accountIds","searchAccountIds","showSearch","size","_jsx","className","FormattedMessage","id","defaultMessage","SearchContainer","map","AccountContainer","role","tabIndex","onClick","Motion","defaultStyle","x","style","spring","stiffness","damping","transform","visibility","propTypes","onClose","PropTypes","func","isRequired","intl","object","title","string","ImmutablePropTypes","list","fetchPinnedAccounts","resetPinnedAccountsEditor"],"mappings":"oOAwBeA,kBAAWC,mBAhBEC,KAC1B,MAAMC,EAAaC,cAOnB,MALwBC,CAACC,EAAKC,KAAA,IAAE,UAAEC,EAAS,MAAEC,GAAOF,EAAA,MAAM,CACxDG,QAASP,EAAWG,EAAOE,GAC3BC,WAAwB,IAAVA,EAAwBH,EAAMK,MAAM,CAAC,uBAAwB,WAAY,UAAUC,SAASJ,GAAaC,EACxH,CAEqB,IAGGI,CAACC,EAAQC,KAAA,IAAE,UAAEP,GAAWO,EAAA,MAAM,CACvDC,SAAUA,IAAMF,EAASG,aAAaT,IACtCU,MAAOA,IAAMJ,EAASK,aAAWX,IAClC,GAEyBP,CAAiDmB,M,UCD5DpB,kBAAWC,mBAVFK,IAAK,CAC3Be,MAAOf,EAAMK,MAAM,CAAC,uBAAwB,cAAe,cAGlCG,IAAQ,CACjCQ,SAAUD,GAASP,EAASS,aAA+BF,IAC3DG,QAASA,IAAMV,EAASW,eACxBC,SAAUL,GAASP,EAASa,YAAgCN,OAGpCpB,CAA6C2B,MCIvE,MAAMC,UAA6BC,IAajCC,oBACE,MAAM,aAAEC,GAAiBC,KAAKC,MAC9BF,GACF,CAEAG,uBACE,MAAM,QAAEC,GAAYH,KAAKC,MACzBE,GACF,CAEAC,SACE,MAAM,WAAEC,EAAU,iBAAEC,EAAgB,QAAEf,GAAYS,KAAKC,MACjDM,EAAaD,EAAiBE,KAAO,EAE3C,OACEC,YAAA,OAAKC,UAAU,sCAA+B,EAC5CD,YAAA,eAAIA,YAACE,IAAgB,CAACC,GAAE,6CAA8CC,eAAe,uBAErFJ,YAACK,EAAe,IAEhBL,YAAA,OAAKC,UAAU,sBAAe,EAC5BD,YAAA,OAAKC,UAAU,4CAAqC,EACjDL,EAAWU,KAAIxC,GAAakC,YAACO,EAAgB,CAAiBzC,UAAWA,EAAWC,OAAK,GAAtCD,MAGrDgC,GAAcE,YAAA,OAAKQ,KAAK,SAASC,UAAW,EAAGR,UAAU,mBAAmBS,QAAS5B,IAEtFkB,YAACW,IAAM,CAACC,aAAc,CAAEC,GAAI,KAAOC,MAAO,CAAED,EAAGE,IAAOjB,EAAa,GAAK,IAAK,CAAEkB,UAAW,IAAKC,QAAS,YAAQ,GAC7GpD,IAAA,IAAC,EAAEgD,GAAGhD,EAAA,OACJmC,YAAA,OAAKC,UAAU,yBAAyBa,MAAO,CAAEI,UAAiB,IAANL,EAAU,KAAQ,cAAaA,MAAOM,YAAmB,MAAPN,EAAa,SAAW,iBAAY,EAChJhB,EAAiBS,KAAIxC,GAAakC,YAACO,EAAgB,CAAiBzC,UAAWA,GAAtBA,KACtD,KAMlB,EAlDIqB,EAEGiC,UAAY,CACjBC,QAASC,IAAUC,KAAKC,WACxBC,KAAMH,IAAUI,OAAOF,WACvBlC,aAAcgC,IAAUC,KAAKC,WAC7B1C,QAASwC,IAAUC,KAAKC,WACxB9B,QAAS4B,IAAUC,KAAKC,WACxBG,MAAOL,IAAUM,OAAOJ,WACxB5B,WAAYiC,IAAmBC,KAAKN,WACpC3B,iBAAkBgC,IAAmBC,KAAKN,YA4C/BjE,6BAjESK,IAAK,CAC3BgC,WAAYhC,EAAMK,MAAM,CAAC,uBAAwB,WAAY,UAC7D4B,iBAAkBjC,EAAMK,MAAM,CAAC,uBAAwB,cAAe,cAG7CG,IAAQ,CACjCkB,aAAcA,IAAMlB,EAAS2D,gBAC7BjD,QAASA,IAAMV,EAASW,eACxBW,QAASA,IAAMtB,EAAS4D,mBAyDXzE,CAA6CD,YAAW6B,G","file":"js/flavours/glitch/async/pinned_accounts_editor.js","sourcesContent":["import { injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { pinAccount, unpinAccount } from 'flavours/glitch/actions/accounts';\nimport Account from 'flavours/glitch/features/list_editor/components/account';\nimport { makeGetAccount } from 'flavours/glitch/selectors';\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, { accountId, added }) => ({\n    account: getAccount(state, accountId),\n    added: typeof added === 'undefined' ? state.getIn(['pinnedAccountsEditor', 'accounts', 'items']).includes(accountId) : added,\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = (dispatch, { accountId }) => ({\n  onRemove: () => dispatch(unpinAccount(accountId)),\n  onAdd: () => dispatch(pinAccount(accountId)),\n});\n\nexport default injectIntl(connect(makeMapStateToProps, mapDispatchToProps)(Account));\n","import { injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport Search from 'flavours/glitch/features/list_editor/components/search';\n\nimport {\n  fetchPinnedAccountsSuggestions,\n  clearPinnedAccountsSuggestions,\n  changePinnedAccountsSuggestions,\n} from '../../../actions/accounts';\n\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['pinnedAccountsEditor', 'suggestions', 'value']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(fetchPinnedAccountsSuggestions(value)),\n  onClear: () => dispatch(clearPinnedAccountsSuggestions()),\n  onChange: value => dispatch(changePinnedAccountsSuggestions(value)),\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(Search));\n","import PropTypes from 'prop-types';\n\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport spring from 'react-motion/lib/spring';\n\nimport { fetchPinnedAccounts, clearPinnedAccountsSuggestions, resetPinnedAccountsEditor } from 'flavours/glitch/actions/accounts';\nimport Motion from 'flavours/glitch/features/ui/util/optional_motion';\n\nimport AccountContainer from './containers/account_container';\nimport SearchContainer from './containers/search_container';\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['pinnedAccountsEditor', 'accounts', 'items']),\n  searchAccountIds: state.getIn(['pinnedAccountsEditor', 'suggestions', 'items']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onInitialize: () => dispatch(fetchPinnedAccounts()),\n  onClear: () => dispatch(clearPinnedAccountsSuggestions()),\n  onReset: () => dispatch(resetPinnedAccountsEditor()),\n});\n\nclass PinnedAccountsEditor extends ImmutablePureComponent {\n\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    onInitialize: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    accountIds: ImmutablePropTypes.list.isRequired,\n    searchAccountIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  componentDidMount () {\n    const { onInitialize } = this.props;\n    onInitialize();\n  }\n\n  componentWillUnmount () {\n    const { onReset } = this.props;\n    onReset();\n  }\n\n  render () {\n    const { accountIds, searchAccountIds, onClear } = this.props;\n    const showSearch = searchAccountIds.size > 0;\n\n    return (\n      <div className='modal-root__modal list-editor'>\n        <h4><FormattedMessage id='endorsed_accounts_editor.endorsed_accounts' defaultMessage='Featured accounts' /></h4>\n\n        <SearchContainer />\n\n        <div className='drawer__pager'>\n          <div className='drawer__inner list-editor__accounts'>\n            {accountIds.map(accountId => <AccountContainer key={accountId} accountId={accountId} added />)}\n          </div>\n\n          {showSearch && <div role='button' tabIndex={-1} className='drawer__backdrop' onClick={onClear} />}\n\n          <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n            {({ x }) =>\n              (<div className='drawer__inner backdrop' style={{ transform: x === 0 ? null : `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                {searchAccountIds.map(accountId => <AccountContainer key={accountId} accountId={accountId} />)}\n              </div>)\n            }\n          </Motion>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(PinnedAccountsEditor));\n"],"sourceRoot":""}