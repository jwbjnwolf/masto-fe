{"version":3,"sources":["webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/list_editor/components/edit_list_form.jsx","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/list_editor/containers/account_container.js","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/list_editor/containers/search_container.js","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/list_editor/index.jsx"],"names":["messages","defineMessages","title","id","defaultMessage","ListForm","PureComponent","constructor","arguments","handleChange","e","this","props","onChange","target","value","handleSubmit","preventDefault","onSubmit","handleClick","render","disabled","intl","formatMessage","_jsx","className","IconButton","icon","onClick","connect","state","getIn","dispatch","changeListEditorTitle","submitListEditor","injectIntl","makeMapStateToProps","getAccount","makeGetAccount","mapStateToProps","_ref","accountId","added","account","includes","mapDispatchToProps","_ref2","onRemove","removeFromListEditor","onAdd","addToListEditor","Account","fetchListSuggestions","onClear","clearListSuggestions","changeListSuggestions","Search","ListEditor","ImmutablePureComponent","componentDidMount","onInitialize","listId","componentWillUnmount","onReset","accountIds","searchAccountIds","showSearch","size","EditListForm","SearchContainer","map","AccountContainer","role","tabIndex","Motion","defaultStyle","x","style","spring","stiffness","damping","transform","visibility","propTypes","PropTypes","string","isRequired","onClose","func","object","ImmutablePropTypes","list","setupListEditor","resetListEditor"],"mappings":"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","file":"js/flavours/glitch/async/list_editor.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { changeListEditorTitle, submitListEditor } from 'flavours/glitch/actions/lists';\nimport { IconButton } from 'flavours/glitch/components/icon_button';\n\nconst messages = defineMessages({\n  title: { id: 'lists.edit.submit', defaultMessage: 'Change title' },\n});\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['listEditor', 'title']),\n  disabled: !state.getIn(['listEditor', 'isChanged']) || !state.getIn(['listEditor', 'title']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: value => dispatch(changeListEditorTitle(value)),\n  onSubmit: () => dispatch(submitListEditor(false)),\n});\n\nclass ListForm extends PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.props.onChange(e.target.value);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit();\n  };\n\n  handleClick = () => {\n    this.props.onSubmit();\n  };\n\n  render () {\n    const { value, disabled, intl } = this.props;\n\n    const title = intl.formatMessage(messages.title);\n\n    return (\n      <form className='column-inline-form' onSubmit={this.handleSubmit}>\n        <input\n          className='setting-text'\n          value={value}\n          onChange={this.handleChange}\n        />\n\n        <IconButton\n          disabled={disabled}\n          icon='check'\n          title={title}\n          onClick={this.handleClick}\n        />\n      </form>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(ListForm));\n","import { injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { removeFromListEditor, addToListEditor } from 'flavours/glitch/actions/lists';\nimport { makeGetAccount } from 'flavours/glitch/selectors';\n\nimport Account from '../components/account';\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, { accountId, added }) => ({\n    account: getAccount(state, accountId),\n    added: typeof added === 'undefined' ? state.getIn(['listEditor', 'accounts', 'items']).includes(accountId) : added,\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = (dispatch, { accountId }) => ({\n  onRemove: () => dispatch(removeFromListEditor(accountId)),\n  onAdd: () => dispatch(addToListEditor(accountId)),\n});\n\nexport default injectIntl(connect(makeMapStateToProps, mapDispatchToProps)(Account));\n","import { injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { fetchListSuggestions, clearListSuggestions, changeListSuggestions } from '../../../actions/lists';\nimport Search from '../components/search';\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['listEditor', 'suggestions', 'value']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(fetchListSuggestions(value)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onChange: value => dispatch(changeListSuggestions(value)),\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(Search));\n","import PropTypes from 'prop-types';\n\nimport { injectIntl } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport spring from 'react-motion/lib/spring';\n\nimport { setupListEditor, clearListSuggestions, resetListEditor } from 'flavours/glitch/actions/lists';\n\nimport Motion from '../ui/util/optional_motion';\n\nimport EditListForm from './components/edit_list_form';\nimport AccountContainer from './containers/account_container';\nimport SearchContainer from './containers/search_container';\n\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['listEditor', 'accounts', 'items']),\n  searchAccountIds: state.getIn(['listEditor', 'suggestions', 'items']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onInitialize: listId => dispatch(setupListEditor(listId)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onReset: () => dispatch(resetListEditor()),\n});\n\nclass ListEditor extends ImmutablePureComponent {\n\n  static propTypes = {\n    listId: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    onInitialize: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n    accountIds: ImmutablePropTypes.list.isRequired,\n    searchAccountIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  componentDidMount () {\n    const { onInitialize, listId } = this.props;\n    onInitialize(listId);\n  }\n\n  componentWillUnmount () {\n    const { onReset } = this.props;\n    onReset();\n  }\n\n  render () {\n    const { accountIds, searchAccountIds, onClear } = this.props;\n    const showSearch = searchAccountIds.size > 0;\n\n    return (\n      <div className='modal-root__modal list-editor'>\n        <EditListForm />\n\n        <SearchContainer />\n\n        <div className='drawer__pager'>\n          <div className='drawer__inner list-editor__accounts'>\n            {accountIds.map(accountId => <AccountContainer key={accountId} accountId={accountId} added />)}\n          </div>\n\n          {showSearch && <div role='button' tabIndex={-1} className='drawer__backdrop' onClick={onClear} />}\n\n          <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n            {({ x }) =>\n              (<div className='drawer__inner backdrop' style={{ transform: x === 0 ? null : `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                {searchAccountIds.map(accountId => <AccountContainer key={accountId} accountId={accountId} />)}\n              </div>)\n            }\n          </Motion>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(ListEditor));\n"],"sourceRoot":""}