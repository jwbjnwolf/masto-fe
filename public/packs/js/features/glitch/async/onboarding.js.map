{"version":3,"sources":["webpack:///./app/javascript/material-icons/400-24px/add_photo_alternate.svg","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/onboarding/components/step.jsx","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/components/column_back_button.tsx","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/onboarding/follows.jsx","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/onboarding/profile.jsx","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/onboarding/share.jsx","webpack:///app/javascript/Users/jase/Github/masto-fe-standalone/app/javascript/flavours/glitch/features/onboarding/index.jsx","webpack:///./app/javascript/images/elephant_ui_conversation.svg"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","title","titleId","props","xmlns","height","viewBox","width","id","d","Step","label","description","icon","iconComponent","completed","onClick","href","to","content","_jsxs","_Fragment","children","_jsx","className","Icon","CheckIcon","ArrowRightAltIcon","rel","Link","ColumnBackButton","handleClick","history","useAppHistory","useCallback","_history$location$sta","location","state","fromMastodon","goBack","push","useHandleClick","component","ArrowBackIcon","FormattedMessage","defaultMessage","ButtonInTabsBar","Follows","dispatch","useDispatch","isLoading","useAppSelector","getIn","suggestions","loadedContent","useEffect","fetchSuggestions","markAsPartial","Array","fill","map","_","EmptyAccount","isEmpty","suggestion","Account","get","withBio","values","strong","chunks","messages","defineMessages","uploadHeader","uploadAvatar","nullIfMissing","path","endsWith","Profile","account","me","displayName","setDisplayName","useState","note","setNote","unescapeHTML","avatar","setAvatar","header","setHeader","discoverable","setDiscoverable","isSaving","setIsSaving","errors","setErrors","avatarFileRef","createRef","headerFileRef","intl","useIntl","useHistory","handleDisplayNameChange","e","value","handleNoteChange","handleDiscoverableChange","checked","handleAvatarChange","_e$target","files","handleHeaderChange","_e$target2","avatarPreview","useMemo","URL","createObjectURL","headerPreview","handleSubmit","updateAccount","indexable","then","catch","err","response","data","details","classNames","selected","invalid","formatMessage","_jsx2","type","hidden","ref","accept","onChange","src","alt","EditIcon","AddPhotoAlternateIcon","field_with_errors","display_name","htmlFor","maxLength","Toggle","Button","block","disabled","LoadingIndicator","shareableMessage","CopyPasteText","PureComponent","constructor","_defineProperty","copied","focused","c","input","setState","focus","select","setSelectionRange","stopPropagation","navigator","clipboard","writeText","blur","timeout","setTimeout","componentWillUnmount","clearTimeout","render","tabIndex","role","handleInputClick","readOnly","setRef","onFocus","handleFocus","onBlur","handleBlur","handleButtonClick","ContentCopyIcon","TipCarousel","index","Number","currentTarget","getAttribute","preventDefault","_ref2","Math","abs","_ref3","_ref4","onKeyDown","handleKeyDown","SwipeableViews","onChangeIndex","handleSwipe","enableMouseEvents","active","handleChangeIndex","Share","url","document","baseURI","username","domain","template","Onboarding","handleComposeClick","focusCompose","Column","Switch","Route","exact","illustration","AccountCircleIcon","PersonAddIcon","count","EditNoteIcon","emoji","assetHost","Helmet","name"],"mappings":"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","file":"js/features/glitch/async/onboarding.js","sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAddPhotoAlternate(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 24,\n    viewBox: \"0 -960 960 960\",\n    width: 24,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h360v80H200v560h560v-360h80v360q0 33-23.5 56.5T760-120H200Zm480-480v-80h-80v-80h80v-80h80v80h80v80h-80v80h-80ZM240-280h480L570-480 450-320l-90-120-120 160Zm-40-480v560-560Z\"\n  })));\n}\nexport default SvgAddPhotoAlternate;","import PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport ArrowRightAltIcon from '@/material-icons/400-24px/arrow_right_alt.svg?react';\nimport CheckIcon from '@/material-icons/400-24px/done.svg?react';\nimport { Icon } from 'flavours/glitch/components/icon';\n\n\nexport const Step = ({ label, description, icon, iconComponent, completed, onClick, href, to }) => {\n  const content = (\n    <>\n      <div className='onboarding__steps__item__icon'>\n        <Icon id={icon} icon={iconComponent} />\n      </div>\n\n      <div className='onboarding__steps__item__description'>\n        <h6>{label}</h6>\n        <p>{description}</p>\n      </div>\n\n      <div className={completed ? 'onboarding__steps__item__progress' : 'onboarding__steps__item__go'}>\n        {completed ? <Icon icon={CheckIcon} /> : <Icon icon={ArrowRightAltIcon} />}\n      </div>\n    </>\n  );\n\n  if (href) {\n    return (\n      <a href={href} onClick={onClick} target='_blank' rel='noopener' className='onboarding__steps__item'>\n        {content}\n      </a>\n    );\n  } else if (to) {\n    return (\n      <Link to={to} className='onboarding__steps__item'>\n        {content}\n      </Link>\n    );\n  }\n\n  return (\n    <button onClick={onClick} className='onboarding__steps__item'>\n      {content}\n    </button>\n  );\n};\n\nStep.propTypes = {\n  label: PropTypes.node,\n  description: PropTypes.node,\n  icon: PropTypes.string,\n  iconComponent: PropTypes.func,\n  completed: PropTypes.bool,\n  href: PropTypes.string,\n  to: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","import { useCallback } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ArrowBackIcon from '@/material-icons/400-24px/arrow_back.svg?react';\nimport { Icon } from 'flavours/glitch/components/icon';\nimport { ButtonInTabsBar } from 'flavours/glitch/features/ui/util/columns_context';\n\nimport { useAppHistory } from './router';\n\ntype OnClickCallback = () => void;\n\nfunction useHandleClick(onClick?: OnClickCallback) {\n  const history = useAppHistory();\n\n  return useCallback(() => {\n    if (onClick) {\n      onClick();\n    } else if (history.location.state?.fromMastodon) {\n      history.goBack();\n    } else {\n      history.push('/');\n    }\n  }, [history, onClick]);\n}\n\nexport const ColumnBackButton: React.FC<{ onClick: OnClickCallback }> = ({\n  onClick,\n}) => {\n  const handleClick = useHandleClick(onClick);\n\n  const component = (\n    <button onClick={handleClick} className='column-back-button'>\n      <Icon\n        id='chevron-left'\n        icon={ArrowBackIcon}\n        className='column-back-button__icon'\n      />\n      <FormattedMessage id='column_back_button.label' defaultMessage='Back' />\n    </button>\n  );\n\n  return <ButtonInTabsBar>{component}</ButtonInTabsBar>;\n};\n","import { useEffect } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { Link } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\n\n\nimport { fetchSuggestions } from 'flavours/glitch/actions/suggestions';\nimport { markAsPartial } from 'flavours/glitch/actions/timelines';\nimport { ColumnBackButton } from 'flavours/glitch/components/column_back_button';\nimport { EmptyAccount } from 'flavours/glitch/components/empty_account';\nimport Account from 'flavours/glitch/containers/account_container';\nimport { useAppSelector } from 'flavours/glitch/store';\n\nexport const Follows = () => {\n  const dispatch = useDispatch();\n  const isLoading = useAppSelector(state => state.getIn(['suggestions', 'isLoading']));\n  const suggestions = useAppSelector(state => state.getIn(['suggestions', 'items']));\n\n  useEffect(() => {\n    dispatch(fetchSuggestions(true));\n\n    return () => {\n      dispatch(markAsPartial('home'));\n    };\n  }, [dispatch]);\n\n  let loadedContent;\n\n  if (isLoading) {\n    loadedContent = (new Array(8)).fill().map((_, i) => <EmptyAccount key={i} />);\n  } else if (suggestions.isEmpty()) {\n    loadedContent = <div className='follow-recommendations__empty'><FormattedMessage id='onboarding.follows.empty' defaultMessage='Unfortunately, no results can be shown right now. You can try using search or browsing the explore page to find people to follow, or try again later.' /></div>;\n  } else {\n    loadedContent = suggestions.map(suggestion => <Account id={suggestion.get('account')} key={suggestion.get('account')} withBio />);\n  }\n\n  return (\n    <>\n      <ColumnBackButton />\n\n      <div className='scrollable privacy-policy'>\n        <div className='column-title'>\n          <h3><FormattedMessage id='onboarding.follows.title' defaultMessage='Popular on Mastodon' /></h3>\n          <p><FormattedMessage id='onboarding.follows.lead' defaultMessage='You curate your own home feed. The more people you follow, the more active and interesting it will be. These profiles may be a good starting point—you can always unfollow them later!' /></p>\n        </div>\n\n        <div className='follow-recommendations'>\n          {loadedContent}\n        </div>\n\n        <p className='onboarding__lead'><FormattedMessage id='onboarding.tips.accounts_from_other_servers' defaultMessage='<strong>Did you know?</strong> Since Mastodon is decentralized, some profiles you come across will be hosted on servers other than yours. And yet you can interact with them seamlessly! Their server is in the second half of their username!' values={{ strong: chunks => <strong>{chunks}</strong> }} /></p>\n\n        <div className='onboarding__footer'>\n          <Link className='link-button' to='/start'><FormattedMessage id='onboarding.actions.back' defaultMessage='Take me back' /></Link>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState, useMemo, useCallback, createRef } from 'react';\n\nimport { useIntl, defineMessages, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { useHistory } from 'react-router-dom';\n\n\nimport { useDispatch } from 'react-redux';\n\nimport Toggle from 'react-toggle';\n\nimport AddPhotoAlternateIcon from '@/material-icons/400-24px/add_photo_alternate.svg?react';\nimport EditIcon from '@/material-icons/400-24px/edit.svg?react';\nimport { updateAccount } from 'flavours/glitch/actions/accounts';\nimport { Button } from 'flavours/glitch/components/button';\nimport { ColumnBackButton } from 'flavours/glitch/components/column_back_button';\nimport { Icon } from 'flavours/glitch/components/icon';\nimport { LoadingIndicator } from 'flavours/glitch/components/loading_indicator';\nimport { me } from 'flavours/glitch/initial_state';\nimport { useAppSelector } from 'flavours/glitch/store';\nimport { unescapeHTML } from 'flavours/glitch/utils/html';\n\nconst messages = defineMessages({\n  uploadHeader: { id: 'onboarding.profile.upload_header', defaultMessage: 'Upload profile header' },\n  uploadAvatar: { id: 'onboarding.profile.upload_avatar', defaultMessage: 'Upload profile picture' },\n});\n\nconst nullIfMissing = path => path.endsWith('missing.png') ? null : path;\n\nexport const Profile = () => {\n  const account = useAppSelector(state => state.getIn(['accounts', me]));\n  const [displayName, setDisplayName] = useState(account.get('display_name'));\n  const [note, setNote] = useState(unescapeHTML(account.get('note')));\n  const [avatar, setAvatar] = useState(null);\n  const [header, setHeader] = useState(null);\n  const [discoverable, setDiscoverable] = useState(account.get('discoverable'));\n  const [isSaving, setIsSaving] = useState(false);\n  const [errors, setErrors] = useState();\n  const avatarFileRef = createRef();\n  const headerFileRef = createRef();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const history = useHistory();\n\n  const handleDisplayNameChange = useCallback(e => {\n    setDisplayName(e.target.value);\n  }, [setDisplayName]);\n\n  const handleNoteChange = useCallback(e => {\n    setNote(e.target.value);\n  }, [setNote]);\n\n  const handleDiscoverableChange = useCallback(e => {\n    setDiscoverable(e.target.checked);\n  }, [setDiscoverable]);\n\n  const handleAvatarChange = useCallback(e => {\n    setAvatar(e.target?.files?.[0]);\n  }, [setAvatar]);\n\n  const handleHeaderChange = useCallback(e => {\n    setHeader(e.target?.files?.[0]);\n  }, [setHeader]);\n\n  const avatarPreview = useMemo(() => avatar ? URL.createObjectURL(avatar) : nullIfMissing(account.get('avatar')), [avatar, account]);\n  const headerPreview = useMemo(() => header ? URL.createObjectURL(header) : nullIfMissing(account.get('header')), [header, account]);\n\n  const handleSubmit = useCallback(() => {\n    setIsSaving(true);\n\n    dispatch(updateAccount({\n      displayName,\n      note,\n      avatar,\n      header,\n      discoverable,\n      indexable: discoverable,\n    })).then(() => history.push('/start/follows')).catch(err => {\n      setIsSaving(false);\n      setErrors(err.response.data.details);\n    });\n  }, [dispatch, displayName, note, avatar, header, discoverable, history]);\n\n  return (\n    <>\n      <ColumnBackButton />\n\n      <div className='scrollable privacy-policy'>\n        <div className='column-title'>\n          <h3><FormattedMessage id='onboarding.profile.title' defaultMessage='Profile setup' /></h3>\n          <p><FormattedMessage id='onboarding.profile.lead' defaultMessage='You can always complete this later in the settings, where even more customization options are available.' /></p>\n        </div>\n\n        <div className='simple_form'>\n          <div className='onboarding__profile'>\n            <label className={classNames('app-form__header-input', { selected: !!headerPreview, invalid: !!errors?.header })} title={intl.formatMessage(messages.uploadHeader)}>\n              <input\n                type='file'\n                hidden\n                ref={headerFileRef}\n                accept='image/*'\n                onChange={handleHeaderChange}\n              />\n\n              {headerPreview && <img src={headerPreview} alt='' />}\n\n              <Icon icon={headerPreview ? EditIcon : AddPhotoAlternateIcon} />\n            </label>\n\n            <label className={classNames('app-form__avatar-input', { selected: !!avatarPreview, invalid: !!errors?.avatar })} title={intl.formatMessage(messages.uploadAvatar)}>\n              <input\n                type='file'\n                hidden\n                ref={avatarFileRef}\n                accept='image/*'\n                onChange={handleAvatarChange}\n              />\n\n              {avatarPreview && <img src={avatarPreview} alt='' />}\n\n              <Icon icon={avatarPreview ? EditIcon : AddPhotoAlternateIcon} />\n            </label>\n          </div>\n\n          <div className={classNames('input with_block_label', { field_with_errors: !!errors?.display_name })}>\n            <label htmlFor='display_name'><FormattedMessage id='onboarding.profile.display_name' defaultMessage='Display name' /></label>\n            <span className='hint'><FormattedMessage id='onboarding.profile.display_name_hint' defaultMessage='Your full name or your fun name…' /></span>\n            <div className='label_input'>\n              <input id='display_name' type='text' value={displayName} onChange={handleDisplayNameChange} maxLength={30} />\n            </div>\n          </div>\n\n          <div className={classNames('input with_block_label', { field_with_errors: !!errors?.note })}>\n            <label htmlFor='note'><FormattedMessage id='onboarding.profile.note' defaultMessage='Bio' /></label>\n            <span className='hint'><FormattedMessage id='onboarding.profile.note_hint' defaultMessage='You can @mention other people or #hashtags…' /></span>\n            <div className='label_input'>\n              <textarea id='note' value={note} onChange={handleNoteChange} maxLength={500} />\n            </div>\n          </div>\n\n          <label className='app-form__toggle'>\n            <div className='app-form__toggle__label'>\n              <strong><FormattedMessage id='onboarding.profile.discoverable' defaultMessage='Make my profile discoverable' /></strong> <span className='recommended'><FormattedMessage id='recommended' defaultMessage='Recommended' /></span>\n              <span className='hint'><FormattedMessage id='onboarding.profile.discoverable_hint' defaultMessage='When you opt in to discoverability on Mastodon, your posts may appear in search results and trending, and your profile may be suggested to people with similar interests to you.' /></span>\n            </div>\n\n            <div className='app-form__toggle__toggle'>\n              <div>\n                <Toggle checked={discoverable} onChange={handleDiscoverableChange} />\n              </div>\n            </div>\n          </label>\n        </div>\n\n        <div className='onboarding__footer'>\n          <Button block onClick={handleSubmit} disabled={isSaving}>{isSaving ? <LoadingIndicator /> : <FormattedMessage id='onboarding.profile.save_and_continue' defaultMessage='Save and continue' />}</Button>\n        </div>\n      </div>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\n\nimport SwipeableViews from 'react-swipeable-views';\n\nimport ArrowRightAltIcon from '@/material-icons/400-24px/arrow_right_alt.svg?react';\nimport ContentCopyIcon from '@/material-icons/400-24px/content_copy.svg?react';\nimport { ColumnBackButton } from 'flavours/glitch/components/column_back_button';\nimport { Icon }  from 'flavours/glitch/components/icon';\nimport { me, domain } from 'flavours/glitch/initial_state';\nimport { useAppSelector } from 'flavours/glitch/store';\n\nconst messages = defineMessages({\n  shareableMessage: { id: 'onboarding.share.message', defaultMessage: 'I\\'m {username} on #Mastodon! Come follow me at {url}' },\n});\n\nclass CopyPasteText extends PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string,\n  };\n\n  state = {\n    copied: false,\n    focused: false,\n  };\n\n  setRef = c => {\n    this.input = c;\n  };\n\n  handleInputClick = () => {\n    this.setState({ copied: false });\n    this.input.focus();\n    this.input.select();\n    this.input.setSelectionRange(0, this.props.value.length);\n  };\n\n  handleButtonClick = e => {\n    e.stopPropagation();\n\n    const { value } = this.props;\n    navigator.clipboard.writeText(value);\n    this.input.blur();\n    this.setState({ copied: true });\n    this.timeout = setTimeout(() => this.setState({ copied: false }), 700);\n  };\n\n  handleFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  componentWillUnmount () {\n    if (this.timeout) clearTimeout(this.timeout);\n  }\n\n  render () {\n    const { value } = this.props;\n    const { copied, focused } = this.state;\n\n    return (\n      <div className={classNames('copy-paste-text', { copied, focused })} tabIndex='0' role='button' onClick={this.handleInputClick}>\n        <textarea readOnly value={value} ref={this.setRef} onClick={this.handleInputClick} onFocus={this.handleFocus} onBlur={this.handleBlur} />\n\n        <button className='button' onClick={this.handleButtonClick}>\n          <Icon id='copy' icon={ContentCopyIcon} /> {copied ? <FormattedMessage id='copypaste.copied' defaultMessage='Copied' /> : <FormattedMessage id='copypaste.copy_to_clipboard' defaultMessage='Copy to clipboard' />}\n        </button>\n      </div>\n    );\n  }\n\n}\n\nclass TipCarousel extends PureComponent {\n\n  static propTypes = {\n    children: PropTypes.node,\n  };\n\n  state = {\n    index: 0,\n  };\n\n  handleSwipe = index => {\n    this.setState({ index });\n  };\n\n  handleChangeIndex = e => {\n    this.setState({ index: Number(e.currentTarget.getAttribute('data-index')) });\n  };\n\n  handleKeyDown = e => {\n    switch(e.key) {\n    case 'ArrowLeft':\n      e.preventDefault();\n      this.setState(({ index }, { children }) => ({ index: Math.abs(index - 1) % children.length }));\n      break;\n    case 'ArrowRight':\n      e.preventDefault();\n      this.setState(({ index }, { children }) => ({ index: (index + 1) % children.length }));\n      break;\n    }\n  };\n\n  render () {\n    const { children } = this.props;\n    const { index } = this.state;\n\n    return (\n      <div className='tip-carousel' tabIndex='0' onKeyDown={this.handleKeyDown}>\n        <SwipeableViews onChangeIndex={this.handleSwipe} index={index} enableMouseEvents tabIndex='-1'>\n          {children}\n        </SwipeableViews>\n\n        <div className='media-modal__pagination'>\n          {children.map((_, i) => (\n            <button key={i} className={classNames('media-modal__page-dot', { active: i === index })} data-index={i} onClick={this.handleChangeIndex}>\n              {i + 1}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport const Share = () => {\n  const account = useAppSelector(state => state.getIn(['accounts', me]));\n  const intl = useIntl();\n  const url = (new URL(`/@${account.get('username')}`, document.baseURI)).href;\n\n  return (\n    <>\n      <ColumnBackButton />\n\n      <div className='scrollable privacy-policy'>\n        <div className='column-title'>\n          <h3><FormattedMessage id='onboarding.share.title' defaultMessage='Share your profile' /></h3>\n          <p><FormattedMessage id='onboarding.share.lead' defaultMessage='Let people know how they can find you on Mastodon!' /></p>\n        </div>\n\n        <CopyPasteText value={intl.formatMessage(messages.shareableMessage, { username: `@${account.get('username')}@${domain}`, url })} />\n\n        <TipCarousel>\n          <div><p className='onboarding__lead'><FormattedMessage id='onboarding.tips.verification' defaultMessage='<strong>Did you know?</strong> You can verify your account by putting a link to your Mastodon profile on your own website and adding the website to your profile. No fees or documents necessary!'  values={{ strong: chunks => <strong>{chunks}</strong> }}  /></p></div>\n          <div><p className='onboarding__lead'><FormattedMessage id='onboarding.tips.migration' defaultMessage='<strong>Did you know?</strong> If you feel like {domain} is not a great server choice for you in the future, you can move to another Mastodon server without losing your followers. You can even host your own server!' values={{ domain, strong: chunks => <strong>{chunks}</strong> }} /></p></div>\n          <div><p className='onboarding__lead'><FormattedMessage id='onboarding.tips.2fa' defaultMessage='<strong>Did you know?</strong> You can secure your account by setting up two-factor authentication in your account settings. It works with any TOTP app of your choice, no phone number necessary!'  values={{ strong: chunks => <strong>{chunks}</strong> }}  /></p></div>\n        </TipCarousel>\n\n        <p className='onboarding__lead'><FormattedMessage id='onboarding.share.next_steps' defaultMessage='Possible next steps:' /></p>\n\n        <div className='onboarding__links'>\n          <Link to='/home' className='onboarding__link'>\n            <FormattedMessage id='onboarding.actions.go_to_home' defaultMessage='Take me to my home feed' />\n            <Icon icon={ArrowRightAltIcon} />\n          </Link>\n\n          <Link to='/explore' className='onboarding__link'>\n            <FormattedMessage id='onboarding.actions.go_to_explore' defaultMessage='Take me to trending' />\n            <Icon icon={ArrowRightAltIcon} />\n          </Link>\n        </div>\n\n        <div className='onboarding__footer'>\n          <Link className='link-button' to='/start'><FormattedMessage id='onboarding.action.back' defaultMessage='Take me back' /></Link>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useCallback } from 'react';\n\nimport { FormattedMessage, useIntl, defineMessages } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\n\n\n\nimport illustration from '@/images/elephant_ui_conversation.svg';\nimport AccountCircleIcon from '@/material-icons/400-24px/account_circle.svg?react';\nimport ArrowRightAltIcon from '@/material-icons/400-24px/arrow_right_alt.svg?react';\nimport ContentCopyIcon from '@/material-icons/400-24px/content_copy.svg?react';\nimport EditNoteIcon from '@/material-icons/400-24px/edit_note.svg?react';\nimport PersonAddIcon from '@/material-icons/400-24px/person_add.svg?react';\nimport { focusCompose } from 'flavours/glitch/actions/compose';\nimport { Icon }  from 'flavours/glitch/components/icon';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport { me } from 'flavours/glitch/initial_state';\nimport { useAppSelector } from 'flavours/glitch/store';\nimport { assetHost } from 'flavours/glitch/utils/config';\n\nimport { Step } from './components/step';\nimport { Follows } from './follows';\nimport { Profile } from './profile';\nimport { Share } from './share';\n\nconst messages = defineMessages({\n  template: { id: 'onboarding.compose.template', defaultMessage: 'Hello #Mastodon!' },\n});\n\nconst Onboarding = () => {\n  const account = useAppSelector(state => state.getIn(['accounts', me]));\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const history = useHistory();\n\n  const handleComposeClick = useCallback(() => {\n    dispatch(focusCompose(history, intl.formatMessage(messages.template)));\n  }, [dispatch, intl, history]);\n\n  return (\n    <Column>\n      <Switch>\n        <Route path='/start' exact>\n          <div className='scrollable privacy-policy'>\n            <div className='column-title'>\n              <img src={illustration} alt='' className='onboarding__illustration' />\n              <h3><FormattedMessage id='onboarding.start.title' defaultMessage=\"You've made it!\" /></h3>\n              <p><FormattedMessage id='onboarding.start.lead' defaultMessage=\"Your new Mastodon account is ready to go. Here's how you can make the most of it:\" /></p>\n            </div>\n\n            <div className='onboarding__steps'>\n              <Step to='/start/profile' completed={(!account.get('avatar').endsWith('missing.png')) || (account.get('display_name').length > 0 && account.get('note').length > 0)} icon='address-book-o' iconComponent={AccountCircleIcon} label={<FormattedMessage id='onboarding.steps.setup_profile.title' defaultMessage='Customize your profile' />} description={<FormattedMessage id='onboarding.steps.setup_profile.body' defaultMessage='Others are more likely to interact with you with a filled out profile.' />} />\n              <Step to='/start/follows' completed={(account.get('following_count') * 1) >= 1} icon='user-plus' iconComponent={PersonAddIcon} label={<FormattedMessage id='onboarding.steps.follow_people.title' defaultMessage='Find at least {count, plural, one {one person} other {# people}} to follow' values={{ count: 7 }} />} description={<FormattedMessage id='onboarding.steps.follow_people.body' defaultMessage=\"You curate your own home feed. Let's fill it with interesting people.\" />} />\n              <Step onClick={handleComposeClick} completed={(account.get('statuses_count') * 1) >= 1} icon='pencil-square-o' iconComponent={EditNoteIcon} label={<FormattedMessage id='onboarding.steps.publish_status.title' defaultMessage='Make your first post' />} description={<FormattedMessage id='onboarding.steps.publish_status.body' defaultMessage='Say hello to the world.' values={{ emoji: <img className='emojione' alt='🐘' src={`${assetHost}/emoji/1f418.svg`} /> }} />} />\n              <Step to='/start/share' icon='copy' iconComponent={ContentCopyIcon} label={<FormattedMessage id='onboarding.steps.share_profile.title' defaultMessage='Share your profile' />} description={<FormattedMessage id='onboarding.steps.share_profile.body' defaultMessage='Let your friends know how to find you on Mastodon!' />} />\n            </div>\n\n            <p className='onboarding__lead'><FormattedMessage id='onboarding.start.skip' defaultMessage=\"Don't need help getting started?\" /></p>\n\n            <div className='onboarding__links'>\n              <Link to='/explore' className='onboarding__link'>\n                <FormattedMessage id='onboarding.actions.go_to_explore' defaultMessage='Take me to trending' />\n                <Icon icon={ArrowRightAltIcon} />\n              </Link>\n\n              <Link to='/home' className='onboarding__link'>\n                <FormattedMessage id='onboarding.actions.go_to_home' defaultMessage='Take me to my home feed' />\n                <Icon icon={ArrowRightAltIcon} />\n              </Link>\n            </div>\n          </div>\n        </Route>\n\n        <Route path='/start/profile' component={Profile} />\n        <Route path='/start/follows' component={Follows} />\n        <Route path='/start/share' component={Share} />\n      </Switch>\n\n      <Helmet>\n        <meta name='robots' content='noindex' />\n      </Helmet>\n    </Column>\n  );\n};\n\nexport default Onboarding;\n","export default __webpack_public_path__ + \"media/images/elephant_ui_conversation-83162afc12053fe48ad326b35943f4ec.svg\";"],"sourceRoot":""}